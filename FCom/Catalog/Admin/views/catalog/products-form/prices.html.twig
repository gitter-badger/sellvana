{% set m = THIS.get('model') %}
{% set validator = THIS.get('validator') %}
{% set fieldData = { validator:validator } %}
{% import THIS.view('core/form-elements').twigName() as forms %}

<fieldset name="main-product">
  <div class="f-section">
    {{ forms.input(fieldData, {field:'cost', label:'Cost'|_}) }}

    {{ forms.input(fieldData, {field:'msrp', label:'MSRP'|_}) }}

    {{ forms.input(fieldData, {field:'map', label:'MAP'|_}) }}

    {{ forms.input(fieldData, {field:'base_price', label:'Regular Price'|_, required:1}) }}

    {{ forms.input(fieldData, {field:'sale_price', label:'Special Price'|_}) }}

    {{ forms.input(fieldData, {field:'markup', label:'Default Markup'|_}) }}
  </div>
</fieldset>

{% set prices = m.getAllPrices() %}


<fieldset name="product-prices">
    <div class="f-section">
        <div class="form-group">
            {% if MODULES.isLoaded('FCom_CustomerGroups') %}
                {% set customerGroups = APP.instance('FCom_CustomerGroups_Model_Group').groupsOptions() %}
                <label for="prices-customer_groups" class="col-md-2 control-label">{{ "Customer group"|_ }}</label>
                <div class="" style="float: left; margin-left: 15px;">
                    <select id="prices-customer_groups" name="prices[customer_groups]" class="form-control to-select2">
                        <option value="*">{{ "Any (*)"|_ }}</option>
                        {{ UTIL.optionsHtml(customerGroups)|raw }}
                    </select>
                </div>
            {% endif %}
            {% if MODULES.isLoaded('FCom_MultiSite') %}
                {% set sites = APP.instance('FCom_MultiSite_Model_Site').siteOptions() %}
                <label for="prices-sites"
                       class="control-label {{ customerGroups? 'col-md-1': 'col-md-2' }}">{{ "Site"|_ }}</label>

                <div class="" style="float: left; margin-left: 15px;">
                    <select id="prices-sites" name="prices[sites]" class="form-control to-select2">
                        <option value="*">{{ "Any (*)"|_ }}</option>
                        {{ UTIL.optionsHtml(sites)|raw }}
                    </select>
                </div>
            {% endif %}
            {% if MODULES.isLoaded('FCom_MultiCurrency') %}
                {# todo replace with actual currency config #}
                {% set currencies = APP.instance('FCom_MultiSite_Model_Site').siteOptions() %}
                <label for="prices-currencies"
                       class="control-label {{ (customerGroups or sites)? 'col-md-1': 'col-md-2' }}">{{ "Currency"|_ }}</label>

                <div class="" style="float: left; margin-left: 15px;">
                    <select id="prices-currencies" name="prices[currencies]" class="form-control to-select2">
                        <option value="*">{{ "Any (*)"|_ }}</option>
                        {{ UTIL.optionsHtml(currencies)|raw }}
                    </select>
                </div>
            {% endif %}
            <div class="col-md-2">
                <button class="btn btn-primary" id="prices_add_new" type="button">{{ "Add New Price"|_ }}</button>
            </div>
        </div>
        <div id="price_list">
            <div style="width: 200px;margin:10px auto;" class="progress">
                <div class="progress-bar progress-bar-info" style="float: none;width: 100%">{{ "Loading ..."|_ }}</div>
            </div>
        </div>
    </div>
</fieldset>
<script type="text/javascript">
    require(['jquery', 'fcom.catalog.product.price'], function ($, Price) {
        $('select.to-select2').select2({minimumResultsForSearch: 15});
        var options = {
            container: $('#price_list'),
            prices: {{ UTIL.toJson(prices)|raw }},
            customer_groups: {{ customerGroups? UTIL.toJson(customerGroups)|raw: 'null' }},
            sites: {{ sites? UTIL.toJson(sites)|raw: 'null' }},
            currencies: {{ currencies? UTIL.toJson(currencies)|raw: 'null' }},
            filter_customer_group: $('#prices-customer_groups'),
            filter_site: $('#prices-sites'),
            filter_currency: $('#prices-currencies'),
            prices_add_new: $('#prices_add_new')
        };

        Price.init(options);
    })
</script>

{{ THIS.hook('catalog/products-form/prices', {'model' : m}) | raw }}
