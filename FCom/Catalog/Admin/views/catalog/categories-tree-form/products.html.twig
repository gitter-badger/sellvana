{% set m = THIS.get('model') %}
{% set prodCtrl = APP.instance('FCom_Catalog_Admin_Controller_Products') %}
<input type='hidden' name='model[product_ids_add]' id='product_ids_add'/>
<input type='hidden' name='model[product_ids_remove]' id='product_ids_remove'/>
<script>
<<<<<<< HEAD
/**Event Aggregator
This aggregator is for triggering slient_inject that causes main grid adding selected rows from modal grid.**/

if(typeof(g_vent) === 'undefined')
    g_vent = _.extend({}, Backbone.Events);

require(['jquery'], function($) {
    $('button#category_save').click(function(ev) {
        var url = $('form#categories-tree-form').attr('action');
        $.ajax({
           type: "POST",
           url: url,
           data: $('form#categories-tree-form').serialize(),
           success: function(data)
           {
                $.bootstrapGrowl("Saved", { type:'success', align:'center', width:'auto' });
           }
         });

        ev.preventDefault();
        ev.stopPropagation();

        return false;
    });


=======
    /**Event Aggregator
    This aggregator is for triggering slient_inject that causes main grid adding selected rows from modal grid.**/
    var g_vent = _.extend({}, Backbone.Events);
>>>>>>> bbca8faf826480bf674908fa7dffb371d0925030

    function CategoryProdsMng() {
        this.mainGridId = 'category_prods_grid_{{ m.id }}';
        this.modalGridId = 'category_all_prods_grid_{{ m.id }}';

        g_vent.bind('init', this._getOriginalIds);
        g_vent.bind('add', this._addRows);
        g_vent.bind('mass-delete', this._removeRows);

        this.add_ids = [];
        this.remove_ids = [];
        this.original_ids = [];

    }

    CategoryProdsMng.prototype._setFormValues = function() {

        this.add_ids = _.difference(this.add_ids,this.original_ids);
        this.remove_ids = _.intersection(this.remove_ids, this.original_ids);
        $("input[id='product_ids_add']").val(this.add_ids.join(','));
        $("input[id='product_ids_remove']").val(this.remove_ids.join(','));
    }

    CategoryProdsMng.prototype._getOriginalIds = function(ev) {

        if (ev.grid === self.mainGridId) {
            self.original_ids = ev.ids;
        }
    }

    CategoryProdsMng.prototype._addRows = function(ev) {

        if (ev.grid === self.mainGridId)
            $('#btn_add_prod').trigger('click');

        if (ev.grid === self.modalGridId) {
            g_vent.trigger('slient_inject', {grid: self.mainGridId, rows: ev.rows});
            self.add_ids = _.union(_.pluck(ev.rows,'id'), this.add_ids);
            self.remove_ids = _.difference(this.remove_ids, _.pluck(ev.rows,'id'));
            self._setFormValues();
        }


    }

    CategoryProdsMng.prototype._removeRows = function(ev) {
        if(ev.grid === self.mainGridId) {
            self.remove_ids = _.union(_.pluck(ev.rows,'id'), self.remove_ids);
            self.add_ids = _.difference(self.add_ids, _.pluck(ev.rows,'id'));
            self._setFormValues();
        }
    }
    var self = new CategoryProdsMng();
});
</script>

{{ THIS.view('core/backbonegrid').set('grid', prodCtrl.getCatProdConfig(m)) | raw }}

<a role="button" href="#prod-grid-add" data-toggle="modal" style='display:none;' id='btn_add_prod'>{{ "Add"|_ }}</a>
<div class='modal fade' id='prod-grid-add' tabindex='-1'>
    <div class='modal-dialog' style='width:900px;'>
        <div class='modal-content'>
            <div class='modal-header'>
                <button aria-hidden='true' class='close' data-dismiss='modal' type='button'>Ã—</button>
                <h4 class='modal-title' id='myModalLabel'>{{ "Add products"|_ }}</h4>
            </div>
            <div class='modal-body'>
                {{ THIS.view('core/backbonegrid').set('grid', prodCtrl.getAllProdConfig(m)) | raw }}
            </div>
            <div class='modal-footer'>
                <button class='btn btn-default btn-close' data-dismiss='modal' type='button'>{{ "Close"|_ }}</button>
            </div>
        </div>
    </div>
</div>


