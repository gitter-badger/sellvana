{% set m = THIS.get('model') %}
{% set prodCtrl = APP.instance('FCom_Catalog_Admin_Controller_Products') %}
<input type='hidden' name='model[product_ids_add]' id='product_ids_add'/>
<input type='hidden' name='model[product_ids_remove]' id='product_ids_remove'/>
<script>
require(['jquery', 'underscore', 'backbone'], function($, _, Backbone) {
    var allProdGrid, catProdGrid, orignIds, addedIds = [], removedIds = [];
    function updateFormData() {
        console.log(catProdGrid.getRows().pluck('id'));
        removedIds = _.difference(removedIds, catProdGrid.getRows().pluck('id'));
        console.log(catProdGrid.getRows().toJSON());
        var addedRows = _.filter(catProdGrid.getRows().toJSON(), function(row) {
                            return row['added_row'];
                        });

        addedIds = _.pluck(addedRows, 'id');
        $('#user_ids_add').val(addedIds.join(','));
        $('#user_ids_remove').val(removedIds.join(','));
    }
    window.allProdGridRegister = function(grid) {
        allProdGrid = grid;
        grid.build();

        $(allProdGrid.getGridSkeleton().AddButton).click(function() {
            if(allProdGrid.getSelectedRows().length >0) {
                allProdGrid.getSelectedRows().forEach(function (row) {
                    if (!catProdGrid.getRows().findWhere({username: row.get('username')})) {
                        var addedRow = row.toJSON();
                        addedRow.added_row = true;
                        catProdGrid.getRows().add(addedRow);
                    }
                });
            }
            catProdGrid.getGridView().render();
            allProdGrid.getSelectedRows().reset({});
            $('.category-prod-modal-close').trigger('click');

            updateFormData();
        });
    }

    window.catProdGridRegister = function(grid) {
        catProdGrid = grid;
        catProdGrid.build();
        originIds = catProdGrid.getRows().pluck('id');

        $(catProdGrid.getGridSkeleton().AddButton).click(function() {
            $('#btn_add_prod').trigger('click');
        });

        $(catProdGrid.getGridSkeleton().MassDeleteButton).off('click');
        $(catProdGrid.getGridSkeleton().MassDeleteButton).click(function() {

            var rows = catProdGrid.getRows();
            var sRows = catProdGrid.getSelectedRows();

            removedIds = sRows.pluck('id');

            rows.remove(sRows.models);
            sRows.reset();
            catProdGrid.getGridView().render();

            updateFormData();
        });
    }
});
</script>

{{ THIS.view('core/backbonegrid').set('grid', prodCtrl.getCatProdConfig(m)) | raw }}

<a role="button" href="#prod-grid-add" data-toggle="modal" style='display:none;' id='btn_add_prod'>{{ "Add"|_ }}</a>
<div class='modal fade' id='prod-grid-add' tabindex='-1'>
    <div class='modal-dialog' style='width:900px;'>
        <div class='modal-content'>
            <div class='modal-header'>
                <button aria-hidden='true' class='close' data-dismiss='modal' type='button'>Ã—</button>
                <h4 class='modal-title' id='myModalLabel'>{{ "Add products"|_ }}</h4>
            </div>
            <div class='modal-body'>
                {{ THIS.view('core/backbonegrid').set('grid', prodCtrl.getAllProdConfig(m)) | raw }}
            </div>
            <div class='modal-footer'>
                <button class='btn btn-default btn-close category-prod-modal-close' data-dismiss='modal' type='button'>{{ "Close"|_ }}</button>
            </div>
        </div>
    </div>
</div>


