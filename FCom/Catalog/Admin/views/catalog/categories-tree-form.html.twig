{% set tabs = THIS.sortedTabs() %}
{% set m = THIS.get('model') %}

<script>
    require(['fcom.admin'], function() {
        FCom.Admin.Tabs('.f-admin-main-container', {
            url_get: "{{ THIS.get('form_url') }}",
            cur_tab: "{{ THIS.get('cur_tab') }}"
        });
    });

    var mainForm = $('form#categories-tree-form');

    $('button#category_save').click(function (ev)
    {
        $.ajax({
            type: "POST",
            url: mainForm.attr('action'),
            data: mainForm.serialize(),
            success: function (data)
            {
                if (data.status == 'error') {
                    $.bootstrapGrowl("Error:<br>" + data.message, { type: 'danger', align: 'center', width: 'auto', delay: 5000});
                } else {
                    $.bootstrapGrowl("Saved", { type: 'success', align: 'center', width: 'auto' });
                    categoryProdMng.reset();
                }

                console.log(self);
            },
            error: function (xhr, textStatus, errorThrown)
            {
                alert("[ERROR]<br>" + textStatus);
            }
        });

        ev.preventDefault();
        ev.stopPropagation();

        return false;
    });
</script>

<div class="f-admin-main-content">
  <div class="page-header">
    <div class="f-page-title">{{ m.get('full_name')|replace('|', ' > ') }}</div>
    <div class="btn-group">
      <button class="btn btn-primary btn-sm" id="category_save" type="button">{{ 'Save'|_ }}</button>
    </div>
  </div>
  <div class="nav">
    <ul class="nav nav-tabs">
      {% for k, tab in tabs %}
          <li>
              <a class="js-form-tab-toggle" href="#tab-{{ k }}" data-toggle="tab"><span class="icon"></span>{{ tab.label }}</a>
          </li>
      {% endfor %}
    </ul>
  </div>
  <div class="tab-content f-admin-main-content">
    {% for k, tab in tabs %}
      {% if tab.view is not empty %}
          <div class="tab-pane" id="tab-{{ k }}" {% if tab.async is empty %}data-loaded="true"{% endif %}>
              {% if tab.async is empty %}{{ THIS.view(tab.view)|raw }}{% endif %}
          </div>
      {% endif %}
    {% endfor %}
  </div>
</div>
