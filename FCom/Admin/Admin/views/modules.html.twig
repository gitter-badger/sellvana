

<script>
    function runMigrationScripts() {
        $('#form-modules').attr('action', '{{ APP.href("modules/migrate") }}').submit();
    }
</script>
<script>
var rows = null;

function changeStatus(e) {
    $('.grid-mass-edit').click();
    rows = {id: $(e).parents('tr').attr('id')};
}
function afterModuleGridRowRendered(el, row)
{
    if(row.migration_available) {
        el.find('td[data-col="schema_version"]').html('<span class="badge badge-important">'+row.schema_version+'</span>');
    }

    if(row.run_status === 'LOADED') {
        el.find('td[data-col="run_status"]').html('<span class="badge badge-success">'+row.run_status+'</span>');
    } else if(row.run_status ==='ERROR') {
        el.find('td[data-col="run_status"]').html('<span class="badge badge-important">'+row.run_status+'</span>');
    }

    var badge = '';
    switch(row.run_level) {
        case 'REQUESTED':
            badge = 'success';
            break;
        case 'REQUIRED':
            badge = 'warning';
            break;
    }
    if(badge != '')
        el.find('td[data-col="run_level"]').html('<span class="badge badge-'+badge+'">'+row.run_level+'</span>');
}

/**Event Aggregator
This aggregator is for triggering slient_inject that causes main grid adding selected rows from modal grid.**/

require(['jquery', 'backbone', 'underscore'], function($, Backbone, _) {
    if (typeof(g_vent) === 'undefined') {
        g_vent = _.extend({}, Backbone.Events);
    }

    function RowModelEx() {
        g_vent.bind('mass-edit', this.mass_save);
        g_vent.bind('edit', this.save);

    }
    RowModelEx.prototype.save = function(ev) {
        if (ev.grid !== 'FCom_Admin_Controller_Modules') {
            return;
        }
        var data = {
            module_name: ev.row.name,
            run_level_core: ev.row.run_level_core/*,
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')*/
        };
        $.post("{{ THIS.get('form_url') }}", data, function(response, status, xhr) {
            $.bootstrapGrowl("Run level has been saved", { type:'success', align:'center', width:'auto' });
        });
    }

    RowModelEx.prototype.mass_save = function(ev) {
        if (ev.grid !== 'FCom_Admin_Controller_Modules') {
            return;
        }
        console.log(ev.rows);
        var tmpRows =  [];
        var data = [];
        var tmpSelectedRows = ev.rows;
        if (rows) {
            if (ev.selectedRows.length > 0) {
                ev.selectedRows.each(function (data) {
                   if (data.id != rows.id) {
                       ev.selectedRows.remove(data.attributes, {silent: true});
                   }
                });
            } else {
                var tmp = ev.rowsCollection.findWhere({id: rows.id});
                ev.selectedRows.add(tmp.attributes);
            }
            tmpRows.push({name: ev.selectedRows.models[0].get('name'), run_level_core: ev.selectedRows.models[0].get('run_level_core')});
        } else {
            tmpRows = ev.rows;
        }

        for (var i in tmpRows) {
            data.push({module_name: tmpRows[i].name, run_level_core: tmpRows[i].run_level_core});
        };
        console.log(data);
        $.post("{{ THIS.get('form_url') }}", {data: data}, function(response, status, xhr) {
            rows = null;
            $.post("{{ THIS.get('form_url') }}", {async: true, data: data}, function(response, status, xhr) {
                response.data.forEach(function (obj) {
                  var tem = ev.rowsCollection.findWhere({name: obj.module_name}).set('run_status', obj.run_status).set('run_level', obj.run_level);
                })
                ev.selectedRows.reset();
                tmpSelectedRows.forEach(function (obj) {
                    var tmp = ev.rowsCollection.findWhere({id: obj.id});
                    ev.selectedRows.add(tmp);
                });
                ev.rowsCollection.trigger('render');
            });
            //$.bootstrapGrowl("Run level has been saved", { type:'success', align:'center', width:'auto' });
        });
    }

    var rowModelEx = new RowModelEx();
});
</script>

<div class="f-admin-main-view">
  <div class="page-header f-admin-page-header">
    <h1 class="f-page-title">
        <i class="icon-table"></i>
        {{ "Modules" |_ }}
    </h1>
    <div class="btn-group">
      <form id="form-modules" method="post">
<!--          <button class="btn btn-success" type="button" onclick="location.href='{{APP.href('modules/market')}}'"><span>{{ 'Download new Modules'|_ }}</span></button>-->
          <button class="btn btn-primary" type="button" onclick="return runMigrationScripts()"><span>{{ 'Run Migration Scripts'|_ }}</span></button>
      </form>
    </div>
  </div>

  <div class="f-admin-main">
      {{ THIS.view('core/messages') | raw }}
      {{ THIS.view('core/backbonegrid') | raw }}
  </div>
</div>



