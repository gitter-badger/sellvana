{% set c = THIS.get('model') %}
{% import THIS.view('admin/form-elements').twigName() as forms %}

<h2>{{ "Core Settings"|_}}</h2>

{{ forms.accordion_start({id:'settings-FCom_Core'}) }}
    {% set fieldData = { model: c, id_prefix:'db', name_prefix:'config[db]', get_prefix:'db' } %}
    {{ forms.accordion_panel_start({label:'DB Settings'|_, id:'settings-FCom_Core-group0', in:1}) }}
        {{ forms.input(fieldData|merge({ field:'host', label:'Host'|_ })) }}
        {{ forms.input(fieldData|merge({ field:'port', label:'Port'|_ })) }}
        {{ forms.input(fieldData|merge({ field:'dbname', label:'Database'|_ })) }}
        {{ forms.input(fieldData|merge({ field:'username', label:'Username'|_ })) }}
        {{ forms.input(fieldData|merge({ field:'password', label:'Password'|_, value:c.get('db/password')?'*****':'', type:'password', placeholder:'*****' })) }}
        {{ forms.boolean(fieldData|merge({ field:'logging', label:'Enable Logging'|_ })) }}
        {{ forms.boolean(fieldData|merge({ field:'implicit_migration', label:'Implicit Migration'|_ })) }}
    {{ forms.accordion_panel_end }}

    {% set fieldData = { model:c, settings_module: 'FCom_Core' } %}
    {{ forms.accordion_panel_start({label:'Website'|_, id:'settings-FCom_Core-group1'}) }}
        {{ forms.input(fieldData|merge({ field:'company_name', label:'Company Name'|_ })) }}
        {{ forms.input(fieldData|merge({ field:'site_title', label:'Site Title'|_ })) }}
        {{ forms.input(fieldData|merge({ field:'admin_email', label:'Admin Email'|_, type:'email' })) }}
        {{ forms.input(fieldData|merge({ field:'sales_name', label:'Sales Name'|_ })) }}
        {{ forms.input(fieldData|merge({ field:'sales_email', label:'Sales Email'|_, type:'email' })) }}
        {{ forms.input(fieldData|merge({ field:'support_name', label:'Support Name'|_ })) }}
        {{ forms.input(fieldData|merge({ field:'support_email', label:'Support Email'|_, type:'email' })) }}
        {{ forms.input(fieldData|merge({ field:'copyright_message', label:'Copyright Message'|_ })) }}
    {{ forms.accordion_panel_end }}

    {% set fieldData = { model: c, id_prefix:'config-cookie', name_prefix:'config[cookie]', get_prefix:'cookie' } %}
    {{ forms.accordion_panel_start({label:'Session'|_, id:'settings-FCom_Core-group2'}) }}
        {{ forms.select(fieldData|merge({ field:'session_handler', label:'Session Handler'|_, options:SESSION.getHandlers() })) }}
        {{ forms.input(fieldData|merge({ field:'remember_days', label:'Remember Me Timeout (days)'|_ })) }}
        {{ forms.input(fieldData|merge({ field:'domain', label:'Cookie Domain'|_ })) }}
        {{ forms.input(fieldData|merge({ field:'path', label:'Cookie Path'|_ })) }}
        {{ forms.input(fieldData|merge({ field:'session_namespace', label:'Cookie Namespace'|_ })) }}
        {{ forms.boolean(fieldData|merge({ field:'session_check_ip', label:'Verify Session IP'|_ })) }}
    {{ forms.accordion_panel_end }}

    {{ forms.accordion_panel_start({label:'System'|_, id:'settings-FCom_Core-group3'}) }}
        {{ forms.boolean({ name:'config[web][hide_script_name]', label:'Hide script file name in URL'|_, value:c.get('web/hide_script_name') }) }}
    {{ forms.accordion_panel_end }}

    {% set fieldData = { model:c, name_prefix: 'config[core][cache]', id_prefix: 'config-core-cache', get_prefix:'core/cache',
        options:{'':'Enable in staging or production modes'|_, 'enable':'Enable always'|_, 'disable':'Disable always'|_} } %}
    {{ forms.accordion_panel_start({label:'Optimizations'|_, id:'settings-FCom_Core-group4'}) }}
        {{ forms.select(fieldData|merge({field:'manifest_files', label:'Module Manifest Files Cache'|_ })) }}
        {{ forms.select(fieldData|merge({field:'layout_files', label:'Layout Files Cache'|_ })) }}
        {{ forms.select(fieldData|merge({field:'view_files', label:'View Template Files Cache'|_ })) }}
        {{ forms.select(fieldData|merge({field:'twig', label:'Twig Cache'|_ })) }}
    {{ forms.accordion_panel_end }}

    {{ forms.accordion_panel_start({label:'CSRF Protection'|_, id:'settings-FCom_Core-group5'}) }}
        {{ forms.select({name:'config[web][csrf_check_method]', label:'Check Method'|_, value:c.get('web/csrf_check_method'), options:{'referrer':'Referrer', 'token':'Token'} }) }}
        {{ forms.input({ name:'config[web][csrf_web_root]', label:'Referrer Web Root (optional)'|_, value:c.get('web/csrf_web_root') }) }}
    {{ forms.accordion_panel_end }}
{{ forms.accordion_end }}
