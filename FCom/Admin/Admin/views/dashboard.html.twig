{% set widgets = THIS.getWidgets() %}
{% set availWidgets = [] %}
{% set asyncWidgets = [] %}

{% for widget in widgets %}
  {% if not widget.state.closed %}
    {% if widget.async %}
      {% set asyncWidgets = asyncWidgets|merge([widget.key]) %}
    {% endif %}
  {% else %}
    {% set availWidgets = availWidgets|merge([widget]) %}
  {% endif %}
{% endfor %}

<div class="page-header f-page-header-has-btns">
  <h1 class="f-page-title">
    <i class="icon-dashboard"></i>
    {{ 'Dashboard'|_ }}
  </h1>
  <div class="btn-group">
    <button class="btn" data-toggle="modal" data-target="#add-widget-modal">{{ '+ Add Widget'|_ }}</button>
  </div>
  <div class="pull-right btn-group">
    <button class="btn btn-default">{{ 'Last month'|_ }}</button>
    <button class="btn btn-default">{{ 'Last week'|_ }}</button>
    <button class="btn btn-default">{{ 'Today'|_ }}</button>
    <div class="btn-group dropdown">
      <button class="btn btn-default dropdown-toggle" data-toggle="dropdown">
        <i class="icon-calendar"></i>
        <span>{{ 'Custom'|_ }}</span>
        <b class="caret"></b>
      </button>
      <ul class="dropdown-menu">
        <li>
          <div class="input-group range">
            <input type="text" placeholder="{{ 'Select date range'|_ }}" class="form-control daterange" value="">
            <span class="input-group-addon">
              <i class="icon-calendar"></i>
            </span>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>

<div class="f-content-dashboard">
  {{ THIS.view('core/messages')|raw }}

  <div class="row">
    <ul class="js-sortable-container" id="dashboard-widgets-container">
    {% for widget in widgets %}
      {% if not widget.state.closed %}
        {{ THIS.view('dashboard/widget').set('widget', widget) | raw }}
      {% endif %}
    {% endfor %}
    </ul>
  </div>
</div>


<!-- Modal -->
<div class="modal fade" id="add-widget-modal" tabindex="-1" role="dialog" aria-labelledby="add-widget-modal-label" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">

      <form id="add-widget-form" role="form">

        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
          <h4 class="modal-title" id="add-widget-modal-label">{{ 'Add A Widget'|_ }}</h4>
        </div>

        <div class="modal-body">
          <div class="row">
            <div class="form-group col-sm-12">
                <label class="control-label">{{ "Widget to add to dashboard"|_ }}</label>
                <div class="controls">
                  <select class="form-control required" name="widget" id="add-widget-selection">
                    <option value="">{{ 'Select a widget...'|_ }}</option>
                    {% for w in availWidgets %}
                      <option value="{{ w.key }}">{{ w.title }}</option>
                    {% endfor %}
                  </select>
                </div>
            </div>
          </div>
        </div>

        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">{{ 'Cancel'|_ }}</button>
          <button type="button" class="btn btn-primary" id="add-widget-submit">{{ 'Add Widget'|_ }}</button>
        </div>

      </form>

    </div>
  </div>
</div>

<script>
require(['jquery', 'jquery-ui'], function($) {
  var dashboardUrl = "{{ APP.href('dashboard') }}", personalizeUrl = "{{ APP.href('my_account/personalize') }}";
  //var widgetTemplate = _.template($('#dashboard-widget-template').html());

  function load(widgets, wrapped, add) {
    $.get(dashboardUrl, { widgets:widgets, wrapped:wrapped||'', add:add||'' }, function(response, status, xhr) {
      $.each(response.widgets, function(key, widget) {
        if (wrapped) {
          $('#dashboard-widgets-container').append(widget.html);
        } else {
          $('#dashboard-widget__'+widget.key+' .widget-contents').html(widget.html);
        }
      });
    });
  }

  {% if asyncWidgets %}
    load({{ UTIL.toJson(asyncWidgets)|raw }}.join(','));
  {% endif %}

  $('#add-widget-submit').click(function(ev) {
    load($('#add-widget-selection').val(), true, true);
    $('#add-widget-modal').modal('hide');
  });

  $('.js-sortable-container').sortable({
    connectWith: '.js-sortable-container',
    handle: '.js-sortable-handle',
    update: function(ev, ui) {
      //console.log(this, ev, ui);
      var widgetIds = [];
      $(this).children().each(function(idx, el) {
        widgetIds.push($(el).data('id'));
      });
      var postData = { do:'dashboard.widget.pos', widgets:widgetIds };
      $.post(personalizeUrl, postData, function(response, status, xhr) {
        console.log(response);
      })
    }
    //delay: 100,
  })

  $('.js-sortable-container').on('click', '.js-remove', function(idx, el) {
    var $el = $(this);
    var postData = { do:'dashboard.widget.close', key:$el.parents('li').data('id') };
    $.post(personalizeUrl, postData, function(response, status, xhr) {
      console.log(response);
    });
  })

  $('.js-sortable-container').on('click', '.js-collapse', function(idx, el) {
    var $el = $(this);
    var postData = { do:'dashboard.widget.collapse', key:$el.parents('li').data('id'), 'collapsed':!$el.parents('.box-collapsed').get(0) };
    $.post(personalizeUrl, postData, function(response, status, xhr) {
      console.log(response);
    });
  })
})
</script>
