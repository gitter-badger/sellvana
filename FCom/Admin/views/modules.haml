:css
    tr.module-disabled td { background:#DDD; }
    tr.module-requested {}

:javascript
    var runLevelColors = {'DISABLED':'#CCC', 'ONDEMAND':'#FFF', '':'#FFF', 'REQUESTED':'#CFC', 'REQUIRED':'#FFC'};
    var bypassModules = {'FCom_Core':1,'FCom_Admin':1,'FCom_Admin_DefaultTheme':1,'FCom_Frontend':1,'FCom_Install':1};
    var runStatusColors = {'IDLE':'', 'LOADED':'#CFC', 'ERROR':'#FCC'};

    function runMigrationScripts() {
        $('#form-modules').attr('action', '#{BApp::href('modules/migrate')}').submit();
    }

    function fmtRunLevel(area) {
        return function(val,opt,row) {
            if (!area || bypassModules[opt.rowId]) {
                return [
                    runStatusColors[val] ? '<div style="padding:3px; color:#000; background:'+runLevelColors[val]+'">' : '<div>'
                    ,val,
                    ,'<'+'/div>'
                ].join('');
            }
            var options = opt.colModel.editoptions.value.split(';');
            var html = [
                '<select id="module_run_levels-', area, '-', escape(opt.rowId), '"',
                ' title="', escape(opt.rowId), '"',
                ' name="module_run_levels[', area, '][', escape(opt.rowId),']"',
                ' style="background:', runLevelColors[val], '"',
                ' onchange="return fmtRunLevelChange(this)">'
            ];
            for (var i=0, l=options.length, a; i<l; i++) {
                a = options[i].split(':');
                html.push([
                    '<option value="', escape(a[0]), '"',
                    ' style="background:', runLevelColors[a[1]], '"',
                    (val==a[0] ? ' selected="selected"' : ''),
                    '>', escape(a[1]), '<'+'/option>'
                ].join(''));
            }
            html.push('<'+'/select>');
            return html.join('');
        }
    }

    function fmtRunLevelChange(el) {
        $(el).css({background:runLevelColors[el.value]});
    }

    function fmtRunStatus(val,opt,row) {
        return [
            runStatusColors[val] ? '<div style="padding:3px; color:#000; background:'+runStatusColors[val]+'">' : '<div>'
            ,val,
            ,'<'+'/div>'
        ].join('');
    }

    function fmtSchemaVersion(val,opt,row) {
        if (row.migration_available && val!=row.version) {
            return '<div style="padding:3px; color:000; background:#FCC">'+(val?val:'&nbsp;')+'<'+'/div>';
        } else {
            return val?val:'';
        }
    }

%form#form-modules(method="post" name="form-modules" action="#{ BApp::href('modules') }")
    %header.adm-page-title
        %span.title Modules
        %div.btns-set
            %button.st1.sz2.btn(type="button" onclick="location.href='#{BApp::href('modules/market')}'")
                %span = $this->_('Download new Modules')
            %button.st1.sz2.btn(type="button" onclick="return runMigrationScripts()")
                %span = $this->_('Run Migration Scripts')
            %button.st1.sz2.btn(type="button" onclick="this.form.submit()")
                %span = $this->_('Save Changes')

    - echo $this->messagesHtml()
    - echo $this->view('jqgrid')