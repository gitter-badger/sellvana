{% set ctrl = APP.instance('FCom_CustomField_Admin_Controller_Products') %}
{% set fieldConfig = ctrl.variantFieldGridConfig(model) %}
{% set variantConfig = ctrl.variantGridConfig(model) %}
<div class="well">
  <select id="sel_var_field" class="form-control" style="width:150px;">
    {{ UTIL.optionsHtml(APP.instance('FCom_CustomField_Model_Field').getDropdowns()) | raw }}
  </select>
  <button class="btn btn-primary btn-sm" id="btn_add_var_field" type="button">Add Field</button>
  <span id="field" class="ui-sortable">
  </span>
</div>
<div class="hidden" id="grid-field-hidden">
    {{ THIS.view('core/backbonegrid').set('grid', fieldConfig) | raw }}
</div>
<div class="f-variants-col row">
  <div class="col-sm-12">
    {{ THIS.view('core/backbonegrid').set('grid', variantConfig) | raw }}
  </div>
</div>

<input type='hidden' id='vfield_ids' name='vfields' />
<input type='hidden' id='variants' name='variants' />
<script>
require(['backbone', 'underscore', 'jquery', 'select2', 'jquery-ui'], function(Backbone, _, $) {
    var fieldCollection = null;
    var vColsCollection = null;
    var vRowsCollection = null;
    var valueCurrentField = Array();
    var arrField = Array();
    g_vent.trigger('get_rows_collection',
                    {
                        'grid': 'variable-field-grid',
                        callback: vFieldGridInit
                    }
                   );
    g_vent.trigger('get_cols_collection', {'grid': 'variant-grid', callback: function(c){ vColsCollection = c;} });
    g_vent.trigger('get_rows_collection', {'grid': 'variant-grid', callback: function(r){ vRowsCollection = r;} });
    function resetSelect()
    {
        $('#sel_var_field').val('');
        $('#sel_var_field').select2();
    }

    function vFieldGridInit(c)
    {

        fieldCollection = c;
        var mapField = fieldCollection.map(function (obj) {
            return {id: obj.id, name: obj.get('name')};
        });
        mapField.forEach(function (obj) {
            $("#sel_var_field option[value='"+obj.id+"']").remove();
            var fields = '<label class="label label-success">'+ obj.name +' <button data-name="'+ obj.name +'" data-id="'+ obj.id +'" class="btn btn-link btn-delete-field" type="button"><i class="icon-remove"></i></button></label>';
            $('#field').append(fields);
        });
        $('#field').sortable({
            scroll: false,
            axis:'x',
            update: function(event, ui) {
                renderGrid();
            }
        });
        resetSelect();
    }



    $('form').submit(function(ev) {

        var variant_fields = [];
        $('#field').find('button').each(function () {
            variant_fields.push({id: $(this).attr('data-id'), name: $(this).attr('data-name')});
        });
        $('input[id="vfield_ids"]').val(JSON.stringify(variant_fields));
        console.log(JSON.stringify(variant_fields));
        var variants = [];
        vRowsCollection.each(function (row) {
            var variant = {};
            variant.sku = row.get('sku');
            variant.price = row.get('price');
            variant.qty = row.get('qty');
            var fvals = {};
            fieldCollection.each(function (f) {
                var key = f.get('name');
                fvals[key] = row.get(key);
                console.log(row);
            });
            $('#field').find('button').each(function () {
                var key = $(this).attr('data-name');
                fvals[key] = row.get(key);
                console.log(row.get(key));
            });
            variant.fields = fvals;
            variants.push(variant);
        });
        $('input[id="variants"]').val(JSON.stringify(variants));
        console.log(JSON.stringify(variants));
        return false;
    });

    $('#btn_add_var_field').click(function() {
        var val = $('#sel_var_field').val();
        if(!val)
            return;
        var text = $("#sel_var_field option:selected").text();

        fieldCollection.add({id: val, name: text });
        fieldCollection.trigger('render');

        $("#sel_var_field option[value='"+val+"']").remove();
        resetSelect();

        $.get('{{ APP.href('/customfields/fields/options?id=') | raw }}'+val,
                function(response) {
                    if (response.success) {
                        addColumn(text, response.options);
                        vRowsCollection.each( function(row) { row.set(text, ''); } );
                        var fields = '<label class="label label-success">'+ text +' <button  data-name="'+ text +'" data-id="'+ val +'" class="btn btn-link btn-delete-field" type="button"><i class="icon-remove"></i></button></label>';
                        $('#field').append(fields);
                        renderGrid();
                    }
                }
        );

    });

    function removeColumn(row)
    {

        var col = vColsCollection.findWhere({name: row.name});
        var delPos = col.get('position');
        vColsCollection.each(function(c) {
            if (c.get('position')>delPos) {
                c.set(col.get('position')-1);
            }
        });

        vColsCollection.remove(col);
        vRowsCollection.each(function(r) {
            delete r.attributes[row.name];
        });
    }

    function renderGrid()
    {
        arrField = Array();
        $('#field').find('button').each(function () {
            var col = vColsCollection.findWhere({name: $(this).attr('data-name')});
            removeColumn(col.attributes);
            arrField.push({id: $(this).attr('data-id'), name: $(this).attr('data-name'), options: col.get('options')});
        });
        arrField.forEach(function (data) {
            addColumn(data.name, data.options);
        });
        valueCurrentField = Array();
        $('#variant-grid tbody').find('tr').each(function () {
            var tmp = Array();
            $(this).find('td').each(function () {
                var self = this;
                var obj = null;
                arrField.forEach(function (data) {
                    if (data.name == $(self).attr('data-col')) {
                        obj = {col: data.name, val: $(self).children('select').val() };
                    }
                });
                obj = (obj) ? obj : {col: $(this).attr('data-col'), val: $(this).children('input').val()}
                tmp.push(obj);
            });
            valueCurrentField.push(tmp);
        })
        vColsCollection.trigger('render');
        vRowsCollection.trigger('render');
        $('#variant-grid tbody').find('tr').each(function (index) {
            $(this).find('td').each(function () {
                var self = this;
                if (valueCurrentField.length) {
                    valueCurrentField[index].forEach(function (data) {
                        if (data.col == $(self).attr('data-col')) {
                            $(self).children('select').val(data.val);
                        }
                    });
                }
            });
        })
    }

    function addColumn(text, options) {
        vColsCollection.each(function(col) {
            if (col.get('position')>0)
                col.set(col.get('postion')+1);
        });

        vColsCollection.add({
            name: text,
            label: text,
            width: 150,
            editable: 'inline',
            addable: true,
            'mass-ediatable': true,
            position: 1,
            validation:{required:true},
            editor: 'select',
            options: options,
            'default': ''
        });
    }

    $('body').on('click', '.btn-delete-field', function () {
       var row;
       var self = this;
        fieldCollection.each(function (r) {
          if (r.id == $(self).attr('data-id')) {
              row = r.attributes;
          }
       });
        var option = '<option value="'+row.id+'">'+row.name+'</option>';
        $('#sel_var_field').append(option);
        resetSelect();
        removeColumn(row);
        $(this).parent().remove();
        renderGrid()

    });

   /* g_vent.bind('delete', function(ev) {
        if (ev.grid === 'variable-field-grid') {
            removeColumn(ev.row);
            console.log(ev.row);
            vColsCollection.trigger('render');
            vRowsCollection.trigger('render');
        }
    });*/

    /*g_vent.bind('mass-delete', function(ev) {
        if (ev.grid === 'variable-field-grid') {
            for(var i in ev.rows)
                removeColumn(ev.rows[i]);

            vColsCollection.trigger('render');
            vRowsCollection.trigger('render');
        }
    });*/

});
</script>
