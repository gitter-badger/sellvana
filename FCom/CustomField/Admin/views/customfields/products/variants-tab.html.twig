{% set ctrl = APP.instance('FCom_CustomField_Admin_Controller_Products') %}
{% set fieldConfig = ctrl.variantFieldGridConfig(model) %}
{% set variantConfig = ctrl.variantGridConfig(model) %}

<script>
require(['backbone', 'underscore', 'jquery', 'select2', 'jquery-ui'], function(Backbone, _, $) {
    var fieldCollection = null;
    var vColsCollection = null;
    var vRowsCollection = null;
    var valueCurrentField = Array();
    var vField = $('#variants-tab-field');
    var bodyGrid = $('#variant-grid').find('tbody');
    var arrField = Array();
    var field;

    window.variantFieldGridRegister = function(grid) {
        grid.build();
        fieldCollection = grid.getRows();
    }
    window.variantGridRegister = function(grid) {
        grid.build();
        vColsCollection = grid.getCols();
        vRowsCollection = grid.getRows();
        vFieldGridInit();
        grayGrid();
    }

    function grayGrid() {
        if ($('#variants-tab-field').children().length) {
            bodyGrid.find('input, select, button').each(function () {
                $(this).prop('disabled', false);
            });
            $('#variant-grid').find('.grid-new').prop('disabled', false);
        } else {
            bodyGrid.find('input, select, button').each(function () {
                $(this).prop('disabled', true);
            });
            $('#variant-grid').find('.grid-new').prop('disabled', true);
        }

    }

    function resetSelect()
    {
        $('#sel_var_field').val('');
        $('#sel_var_field').select2();
    }

    function vFieldGridInit()
    {
        var mapField = fieldCollection.map(function (obj) {
            return {id: obj.id, name: obj.get('name')};
        });
        vColsCollection.each(function (obj) {
            mapField.forEach(function (field) {
                if (field.name == obj.get('name')) {
                    $("#sel_var_field option[value='"+field.id+"']").remove();

                    var fields = '<li class="dd-item dd3-item"><div class="icon-ellipsis-vertical dd-handle dd3-handle"></div><div class="dd3-content">' +
                            '<label>'+ field.name +'</label> <i data-name="'+ field.name +'" data-id="'+ field.id +'" class="icon-remove pull-right btn-link btn-delete-field"></i></div></li>';
                    vField.append(fields);
                }
            });
        });
        vField.sortable({
            scroll: false,
//            axis:'x',
            update: function(event, ui) {
                renderGrid();
            }
        });
        resetSelect();
    }



    $('form').submit(function(ev) {

        var variant_fields = [];
        var tmp_fields = [];
        vField.find('i.icon-remove').each(function () {
            variant_fields.push({id: $(this).attr('data-id'), name: $(this).attr('data-name')});
            tmp_fields.push($(this).attr('data-name'));
        });
        $('#vfield_ids').val(JSON.stringify(variant_fields));
        var variants = [];
        bodyGrid.find('tr').each(function () {
            var variant = {};
            var fvals = {};
           $(this).find('td').each(function () {
                switch ($(this).attr('data-col')) {
                    case 'sku':
                        variant.sku = $(this).find('[data-col="sku"]').val();
                        break;
                    case 'price':
                        variant.price = $(this).find('[data-col="price"]').val();

                        break;
                    case 'qty':
                        variant.qty = $(this).find('[data-col="qty"]').val();
                        break;
                    default :
                        var key = $(this).attr('data-col');
                        if (tmp_fields.indexOf(key) > -1) {
                            var key = key;
                            fvals[key] = $(this).find('[data-col="'+ key +'"]').val();
                        }
                }
           });
           variant.fields = fvals;
           variants.push(variant);
        });
        $('#variants').val(JSON.stringify(variants));
        return true;
    });

    $('#btn_add_var_field').click(function() {
        var val = $('#sel_var_field').val();
        if(!val)
            return;
        var text = $("#sel_var_field option:selected").text();

        fieldCollection.add({id: val, name: text });
        fieldCollection.trigger('render');

        $("#sel_var_field option[value='"+val+"']").remove();
        resetSelect();

        $.get('{{ APP.href('/customfields/fields/options?id=') | raw }}'+val,
                function(response) {
                    if (response.success) {
                        addColumn(text, response.options);
                        vRowsCollection.each( function(row) { row.set(text, ''); } );
                        var fields = '<li class="dd-item dd3-item"><div class="icon-ellipsis-vertical dd-handle dd3-handle"></div><div class="dd3-content">' +
                                '<label>'+ text +'</label> <i data-name="'+ text +'" data-id="'+ val +'" class="icon-remove pull-right btn-link btn-delete-field"></i></div></li>';
                        vField.append(fields);
                        renderGrid();
                    }
                }
        );

    });

    function removeColumn(row)
    {

        var col = vColsCollection.findWhere({name: row.name});
        var delPos = col.get('position');
        vColsCollection.each(function(c) {
            if (c.get('position')>delPos) {
                c.set(col.get('position')-1);
            }
        });

        vColsCollection.remove(col);
        vRowsCollection.each(function(r) {
            delete r.attributes[row.name];
        });
    }

    function renderGrid()
    {
        arrField = Array();
        vField.find('i.icon-remove').each(function () {
            var col = vColsCollection.findWhere({name: $(this).attr('data-name')});
            removeColumn(col.attributes);
            arrField.push({id: $(this).attr('data-id'), name: $(this).attr('data-name'), options: col.get('options')});
        });
        arrField.forEach(function (data) {
            addColumn(data.name, data.options);
        });
        valueCurrentField = Array();
        bodyGrid.find('tr').each(function () {
            var tmp = Array();
            $(this).find('td').each(function () {
                var self = this;
                var obj = null;
                arrField.forEach(function (data) {
                    if (data.name == $(self).attr('data-col')) {
                        obj = {col: data.name, val: $(self).children('select').val() };
                    }
                });
                obj = (obj) ? obj : {col: $(this).attr('data-col'), val: $(this).children('input').val()}
                tmp.push(obj);
            });
            valueCurrentField.push(tmp);
        })
        vColsCollection.trigger('render');
        vRowsCollection.trigger('render');
        bodyGrid.find('tr').each(function (index) {
            $(this).find('td').each(function () {
                var self = this;
                if (valueCurrentField.length) {
                    valueCurrentField[index].forEach(function (data) {
                        if (data.col == $(self).attr('data-col')) {
                            $(self).children('select').val(data.val);
                        }
                    });
                }
            });
        })
    }

    function addColumn(text, options) {
        vColsCollection.each(function(col) {
            if (col.get('position')>0)
                col.set(col.get('postion')+1);
        });

        vColsCollection.add({
            type: 'input',
            name: text,
            label: text,
            width: 150,
            editable: 'inline',
            addable: true,
            'mass-ediatable': true,
            position: 1,
            validation:{required:true},
            editor: 'select',
            options: options,
            'default': ''
        });
        grayGrid();
    }

    $('body').on('click', '.btn-delete-field', function () {
        $('#confirm-delete-field-variant').modal('show');
        field = this;
    });

    $('.modal-delete-field-variant').click(function () {
        var row;
        fieldCollection.each(function (r) {
            if (r.id == $(field).attr('data-id')) {
                row = r.attributes;
            }
        });
        var option = '<option value="'+row.id+'">'+row.name+'</option>';
        $('#sel_var_field').append(option);
        resetSelect();
        removeColumn(row);
        $(field).parents('li').remove();
        renderGrid();
        grayGrid();
    });


});
</script>

<div class="well clearfix">
    <div class="pull-left" style="width: 245px">
        <select id="sel_var_field" class="form-control" style="width:150px;">
            {{ UTIL.optionsHtml(APP.instance('FCom_CustomField_Model_Field').getDropdowns()) | raw }}
        </select>
        <button class="btn btn-primary btn-sm" id="btn_add_var_field" type="button">Add Field</button>
    </div>
    <div class="col-sm-8" style="position: relative">
        <ol id="variants-tab-field" class="dd-list columns dd-list-axis-x"></ol>
    </div>
</div>
<div class="hidden" id="grid-field-hidden">
    {{ THIS.view('core/backbonegrid').set('grid', fieldConfig) | raw }}
</div>
<div class="f-variants-col row">
  <div class="col-sm-12">
    {{ THIS.view('core/backbonegrid').set('grid', variantConfig) | raw }}
  </div>
</div>

<div class='modal fade' id='confirm-delete-field-variant' tabindex='-1'>
    <div class='modal-dialog'>
        <div class='modal-content'>
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">{{ "Delete"|_ }}</h4>
            </div>
            <div class='modal-body'>
                {{ "Deleting this field will remove all associated variants of this product. Are you sure you want to delete?"|_ }}
            </div>
            <div class='modal-footer'>
                <button class='btn btn-primary btn-add modal-delete-field-variant' data-dismiss='modal' type='button'>{{ "Yes"|_ }}</button>
                <button class='btn btn-default btn-close' data-dismiss='modal' type='button'>{{ "Cancel"|_ }}</button>
            </div>
        </div>
    </div>
</div>

<input type='hidden' id='vfield_ids' name='vfields' />
<input type='hidden' id='variants' name='variants' />

