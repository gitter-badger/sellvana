{% set ctrl = APP.instance('FCom_CustomField_Admin_Controller_Products') %}
{% set fieldConfig = ctrl.variantFieldGridConfig(model) %}
{% set variantConfig = ctrl.variantGridConfig(model) %}
<script>
var variantThumbUrl = '';
function updateListVariantImage(imageObject) {
    console.log('abc', imageObject);
    if (prodVariantGrid.find('tr').length > 0) {
        prodVariantGrid.find('tr').each(function() {
            var self = this;
            var imageItems = $(this).find('.list-variant-image');
            var select = $(this).find('.variant-image');
            if (imageObject.add == false) {
                imageObject.image.forEach(function (obj) {
                    imageItems.find('i[data-id="'+ obj.file_id +'"]').parents('li').remove();
                    select.find('option[value="'+ obj.file_id +'"]').remove();
                });
            } else  {
                imageObject.image.forEach(function (obj) {
                    var storeImageId = $(self).find('.store-variant-image-id').val().split(',');
                    var hide = '';
                    if (storeImageId.indexOf(obj.file_id) != -1) {
                        var imageItem = '<li class="dd-item dd3-item"><div class="dd3-content"><img src="'+ variantThumbUrl + obj.subfolder+ '/' + obj.file_name +'"/><label>'+ obj.file_name
                                +'</label> <i data-id="'+ obj.file_id +'" class="icon-remove pull-right btn-link btn-delete-variant-image"></i></div></li>';
                        $(self).find('.list-variant-image').append(imageItem);
                        hide = 'hide';
                    }
                    $(self).find('.variant-image').append("<option class='"+ hide +"' data-subfolder='"+ obj.subfolder +"' value='"+ obj.file_id +"'>"+ obj.file_name +"</option>")
                });
            }

        });
    }
}

require(['backbone', 'underscore', 'jquery', 'select2', 'jquery-ui', 'jquery.validate'], function(Backbone, _, $) {
    var fieldCollection = null;
    var vColsCollection = null;
    var vRowsCollection = null;
    var tr = null;
    var valueCurrentField = Array();
    var vField = $('#variants-tab-field');
    var bodyGrid = $('#variant-grid').find('tbody');
    prodVariantGrid = bodyGrid;
    var arrField = Array();
    var field;

    function updateStoreVariantImageId(el) {
        var id = [];
        el.find('.list-variant-image').find('i').each(function() {
           id.push($(this).attr('data-id'));
        });
        el.find('.store-variant-image-id').val(id.join(','));
    }

    window.variantFieldGridRegister = function(grid) {
        grid.build();
        fieldCollection = grid.getRows();
    }
    window.variantGridRegister = function(grid) {
        var thumb_url = '';
        grid.getGridSkeleton().Views.RowView.prototype.afterRender = function() {
            var select2 = this.$el.find('select.variant-image');
            var self = this;
            variantThumbUrl = thumb_url = this.model.get('thumb_url');
            var imageId = [];
            if (this.model.get('file_id') != null && this.model.get('file_id') != '') {
                imageId = this.model.get('file_id').split(',');
                self.$el.find('.list-variant-image').removeClass('hide');
            }
            function format(state) {
                if (!state.id) return state.text;
                return "<img src='" + thumb_url + $(state.element[0]).attr('data-subfolder') + '/' + state.text + "'/>  " + state.text;
            }
            if (this.model.get('list_image').length > 0) {
                this.model.get('list_image').forEach(function (obj) {
                    var hide = '';
                     if (imageId.indexOf(obj.file_id) != -1) {
                         var imageItem = '<li class="dd-item dd3-item"><div class="dd3-content"><img src="'+ thumb_url + obj.subfolder+ '/' + obj.file_name +'"/><label>'+ obj.file_name
                                 +'</label> <i data-id="'+ obj.file_id +'" class="icon-remove pull-right btn-link btn-delete-variant-image"></i></div></li>';
                         self.$el.find('.list-variant-image').append(imageItem);
                         hide = 'hide'
                     }
                    select2.append("<option class='"+ hide +"' data-subfolder='"+ obj.subfolder +"' value='"+ obj.file_id +"'>"+ obj.file_name +"</option>");
                })
            } else {
                if (typeof (imagesGrid) !== 'undefined') {
                    imagesGrid.getRows().each(function (obj) {
                        select2.append("<option  data-subfolder='"+ obj.get('subfolder') +"' value='"+ obj.get('file_id') +"'>"+ obj.get('file_name') +"</option>");
                    })
                }
            }
            select2.select2({
                formatResult: format,
                formatSelection: format,
                maximumSelectionSize: 3
            });
            this.$el.find('.field-value').select2();
            this.$el.find('.select-value-field').select2({
                allowClear: true,
                data: [{id: 0, text: 'story'},{id: 1, text: 'bug'},{id: 2, text: 'task'}]
            });
            this.$el.find('select:not(.variant-image)').addClass('variantUnique');
        }

        grid.getGridSkeleton().Views.RowView.prototype._deleteRow = function() {
            grid.getRows().remove(this.model/*, {silent: true}*/);
            grid.getSelectedRows().remove(this.model, {silent: true});
        }
        grid.build();
        vColsCollection = grid.getCols();
        vRowsCollection = grid.getRows();
        vFieldGridInit();
        grayGrid();
        bodyGrid.find('select').change(function () {
            $('.variantUnique').each(function () {
                $(this).valid();
            })
        });
        bodyGrid.on('change', '.variant-image', function (){
            var option = $(this).find(':selected');
            var imageItem = '<li class="dd-item dd3-item"><div class="dd3-content"><img src="'+ thumb_url + option.attr('data-subfolder')+ '/' + option.text() +'"/><label>'+ option.text()
                    +'</label> <i data-id="'+ $(this).val() +'" class="icon-remove pull-right btn-link btn-delete-variant-image"></i></div></li>';
            $(this).parent().find('.list-variant-image').append(imageItem);
            $(this).parent().find('.list-variant-image').removeClass('hide');
            option.addClass('hide');
            updateStoreVariantImageId($(this).parents('td'));
            $(this).select2('data', null);

        });
        bodyGrid.on('click', '.btn-delete-variant-image', function() {
            var td = $(this).parents('td');
            td.find('.variant-image').find('option[value="'+ $(this).attr('data-id') +'"]').removeClass('hide');
            td.find('.variant-image').removeClass('hide');
            updateStoreVariantImageId($(this).parents('td'));
            if (td.find('.list-variant-image').find('li').length == 1) {
                td.find('.list-variant-image').addClass('hide');
            }
            $(this).parents('li').remove();
        });
    }
    function grayGrid() {
        if ($('#variants-tab-field').children().length) {
            $('#variant-grid').find('.grid-new').prop('disabled', false);
            //if new field column is added, we need to add  blank row
            if (vRowsCollection.length === 0) {
                vRowsCollection.reset({id: (Math.random() + '').replace(/^0\./, 'f-')});
            }
        } else {
            //if all field columns are removed, we need to remove all rows
            if (vRowsCollection) {
                vRowsCollection.reset();
            }
            $('#variant-grid').find('.grid-new').prop('disabled', true);
        }

    }

    function resetSelect() {
        $('#sel_var_field').val('').select2();
    }

    function vFieldGridInit() {
        var mapField = fieldCollection.map(function (obj) {
            return {id: obj.id, name: obj.get('name'), field_code: obj.get('field_code')};
        });
        vColsCollection.each(function (obj) {
            mapField.forEach(function (field) {
                if (field.id == obj.get('field_id')) {
                    $("#sel_var_field option[value='"+field.id+"']").remove();
                    var fields = '<li class="dd-item dd3-item"><div class="icon-ellipsis-vertical dd-handle dd3-handle"></div><div class="dd3-content">' +
                            '<label>'+ field.name +'</label> <i data-name="'+ field.name +'" data-code="'+ field.field_code +'" data-id="'+ field.id +'" class="icon-remove pull-right btn-link btn-delete-field"></i></div></li>';
                    vField.append(fields);
                }
            });
        });
        vField.sortable({
            scroll: false,
//            axis:'x',
            update: function(event, ui) {
                renderGrid();
            }
        });
        resetSelect();
    }



    $('form').submit(function(ev) {

        var variant_fields = [];
        var tmp_fields = [];
        vField.find('i.icon-remove').each(function () {
            var options = {};
            var self = this;
            vColsCollection.each(function (obj) {
                if (obj.get('field_id') == $(self).attr('data-id')) {
                    options = obj.get('options');
                }
            })
            console.log(options);
            variant_fields.push({id: $(this).attr('data-id'), field_code: $(this).attr('data-code'), options: options, name: $(this).attr('data-name')});
            tmp_fields.push($(this).attr('data-code'));
        });
        return false;
        $('#vfield_ids').val(JSON.stringify(variant_fields));
        var variants = [];
        bodyGrid.find('tr').each(function () {
            var variant = {};
            var fvals = {};
           $(this).find('td').each(function () {
                switch ($(this).attr('data-col')) {
                    case 'sku':
                        variant.sku = $(this).find('[data-col="sku"]').val();
                        break;
                    case 'price':
                        variant.price = $(this).find('[data-col="price"]').val();
                        break;
                    case 'qty':
                        variant.qty = $(this).find('[data-col="qty"]').val();
                        break;
                    default :
                        var key = $(this).attr('data-col');
                        if (tmp_fields.indexOf(key) != -1) {
                            var key = key;
                            fvals[key] = $(this).find('[data-col="'+ key +'"]').val();
                        }
                }
           });
           updateStoreVariantImageId($(this));
           variant.file_id =  $(this).find('.store-variant-image-id').val();
           variant.fields = fvals;
           variants.push(variant);
        });
        $('#variants').val(JSON.stringify(variants));
    });

    $('#btn_add_var_field').click(function() {
        var val = $('#sel_var_field').val();
        if(!val) {
            return;
        }
        var text = $("#sel_var_field option:selected").text();
        var field_code = $("#sel_var_field option:selected").attr('data-code');
        fieldCollection.add({id: val, name: text , field_code: field_code});
        fieldCollection.trigger('render');

        $("#sel_var_field option[value='"+val+"']").remove();
        resetSelect();

        $.get('{{ APP.href('/customfields/fields/options?id=') | raw }}'+val,
                function(response) {
                    if (response.success) {
                        addColumn(text, response.options, val, field_code);
                        vRowsCollection.each( function(row) { row.set(text, ''); } );
                        var fields = '<li class="dd-item dd3-item"><div class="icon-ellipsis-vertical dd-handle dd3-handle"></div><div class="dd3-content">' +
                                '<label>'+ text +'</label> <i data-code="'+ field_code +'" data-name="'+ text +'" data-id="'+ val +'" class="icon-remove pull-right btn-link btn-delete-field"></i></div></li>';
                        vField.append(fields);
                        renderGrid();
                    }
                }
        );

    });

    function removeColumn(row) {
        var col = vColsCollection.findWhere({name: row.name});
        var delPos = col.get('position');
        vColsCollection.each(function(c) {
            if (c.get('position')>delPos) {
                c.set(col.get('position')-1);
            }
        });

        vColsCollection.remove(col);
        vRowsCollection.each(function(r) {
            delete r.attributes[row.field_code];
        });


    }

    function renderGrid() {
        arrField = Array();
        vField.find('i.icon-remove').each(function () {
            var col = vColsCollection.findWhere({name: $(this).attr('data-code')});
            removeColumn(col.attributes);
            arrField.push({id: $(this).attr('data-id'), name: $(this).attr('data-code'), options: col.get('options'), label: col.get('label') });
        });
        arrField.forEach(function (data) {
            addColumn(data.label, data.options, data.id, data.name);
        });
        valueCurrentField = Array();
        bodyGrid.find('tr').each(function () {
            var tmp = Array();
            $(this).find('td').each(function () {
                var self = this;
                var obj = null;
                arrField.forEach(function (data) {
                    if (data.name == $(self).attr('data-col')) {
                        obj = {col: data.name, val: $(self).children('select').val() };
                    }
                });
                obj = (obj) ? obj : {col: $(this).attr('data-col'), val: $(this).children('input').val()}
                tmp.push(obj);
            });
            valueCurrentField.push(tmp);
        })
        vColsCollection.trigger('render');
        vRowsCollection.trigger('render');
        bodyGrid.find('tr').each(function (index) {
            $(this).find('td').each(function () {
                var self = this;
                if (valueCurrentField.length) {
                    valueCurrentField[index].forEach(function (data) {
                        if (data.col == $(self).attr('data-col')) {
                            $(self).children('select').val(data.val);
                        }
                    });
                }
            });
        });
    }

    function addColumn(text, options, field_id, field_code) {
        vColsCollection.each(function(col) {
            if (col.get('position')>0)
                col.set(col.get('postion')+1);
        });
        vColsCollection.add({
            name: field_code,
            label: text,
            field_id: field_id,
            width: 150,
            addable: true,
            position: 1,
            display: 'eval',
            validation:{required:true},
            print: '"<input type=\'hidden\' name=\''+ field_code +'\' class=\'select-value-field\' style=\'width: 130px\' />"',
            options: options,
            'default': ''
        });
        grayGrid();
    }

    $('body').on('click', '.btn-delete-field', function () {
        $('#confirm-delete-field-variant').modal('show');
        field = this;
    });

    $('.modal-delete-field-variant').click(function () {
        var row;
        fieldCollection.each(function (r) {
            if (r.id == $(field).attr('data-id')) {
                row = r.attributes;
            }
        });
        var option = '<option data-code="'+ row.field_code +'" value="'+row.id+'">'+row.name+'</option>';
        $('#sel_var_field').append(option);
        resetSelect();
        removeColumn({name: row.field_code});
        $(field).parents('li').remove();
        renderGrid();
        grayGrid();
        if ($('.variantUnique').length > 0) {
            $('.variantUnique').valid();
        }
    });

    /*
    *custom validation function for checking duplicated input
    */
    function variantUnique(value, elem, params) {
        var error = true;
        if (typeof (elem) !== 'undefined') {
            var parent = $(elem).parents('tr');
            bodyGrid.find('tr').each(function () {
                var self = this;
                var flag = false;
                if ($(this).attr('id') != parent.attr('id')) {
                    parent.find('select').each(function(index) {
                        if ($(this).val() !== $(self).find('select[data-col="'+ $(this).attr('data-col') +'"]').val()) {
                            flag = true; // at least one field is different
                        }
                    });
                    if (!flag) {
                        error = false;
                    }
                }

                return error;
            })
        }
        return error;
    }

    $.validator.addMethod('variantUnique',variantUnique , 'Same variant is already taken place.');

    $.validator.addClassRules("variantUnique", {
        variantUnique: true
    });


});
</script>

<div class="well clearfix">
    <div class="pull-left" style="width: 245px">
        <select id="sel_var_field" class="form-control" style="width:150px;">
            {{ UTIL.optionsHtml(APP.instance('FCom_CustomField_Model_Field').getDropdowns()) | raw }}
        </select>
        <button class="btn btn-primary btn-sm" id="btn_add_var_field" type="button">Add Field</button>
    </div>
    <div class="col-sm-8" style="position: relative">
        <ol id="variants-tab-field" class="dd-list columns dd-list-axis-x"></ol>
    </div>
</div>
<div class="hidden" id="grid-field-hidden">
    {{ THIS.view('core/backbonegrid').set('grid', fieldConfig) | raw }}
</div>
<div class="f-variants-col row">
  <div class="col-sm-12">
    {{ THIS.view('core/backbonegrid').set('grid', variantConfig) | raw }}
  </div>
</div>

<div class='modal fade' id='confirm-delete-field-variant' tabindex='-1'>
    <div class='modal-dialog'>
        <div class='modal-content'>
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">{{ "Delete"|_ }}</h4>
            </div>
            <div class='modal-body'>
                {{ "Deleting this field will remove all associated variants of this product. Are you sure you want to delete?"|_ }}
            </div>
            <div class='modal-footer'>
                <button class='btn btn-primary btn-add modal-delete-field-variant' data-dismiss='modal' type='button'>{{ "Yes"|_ }}</button>
                <button class='btn btn-default btn-close' data-dismiss='modal' type='button'>{{ "Cancel"|_ }}</button>
            </div>
        </div>
    </div>
</div>
<input type='hidden' id='vfield_ids' name='vfields' />
<input type='hidden' id='variants' name='variants' />