{% set m = THIS.get('model') %}
{% set customerCtrl = APP.instance('FCom_Customer_Admin_Controller_Customers') %}
<input type='hidden' name='model[customer_ids_add]' id='customer_ids_add'/>
<input type='hidden' name='model[customer_ids_remove]' id='customer_ids_remove'/>

<script>

    /**Event Aggregator
     This aggregator is for triggering silent_inject that causes main grid adding selected rows from modal grid.**/

    var groupCustomerMng;
    require(['jquery', 'underscore', 'fcom.backbonegrid'], function($) {
        if(typeof(g_vent) === 'undefined') {
            g_vent = _.extend({}, Backbone.Events);
        }

        function GroupCustomerMng() {
            this.mainGridId = 'group_customers_grid_{{ m.id }}';
            this.modalGridId = 'group_all_customers_grid_{{ m.id }}';

            g_vent.bind('init', this._getOriginalIds);
            g_vent.bind('add', this._addRows);
            g_vent.bind('mass-delete', this._removeRows);

            this.add_ids = [];
            this.remove_ids = [];
            this.original_ids = [];

        }

        GroupCustomerMng.prototype._setFormValues = function() {

            this.add_ids = _.difference(this.add_ids,this.original_ids);
            this.remove_ids = _.intersection(this.remove_ids, this.original_ids);
            $('#customer_ids_add').val(this.add_ids.join(','));
            $('#customer_ids_remove').val(this.remove_ids.join(','));

            console.log(this.original_ids);
            console.log(this.add_ids);
            console.log(this.remove_ids);
        }

        GroupCustomerMng.prototype._getOriginalIds = function(ev) {

            if (ev.grid === self.mainGridId) {
                self.original_ids = ev.ids;
            }
        }

        GroupCustomerMng.prototype._addRows = function(ev) {

            if (ev.grid === self.mainGridId)
                $('#btn_add_customer').trigger('click');

            if (ev.grid === self.modalGridId) {
                g_vent.trigger('silent_inject', {grid: self.mainGridId, rows: ev.rows});
                self.add_ids = _.union(_.pluck(ev.rows,'id'), self.add_ids);
                self.remove_ids = _.difference(self.remove_ids, _.pluck(ev.rows,'id'));
                self._setFormValues();
                g_vent.trigger('clear_selection', {grid: self.modalGridId});
                $('button.btn-close.group-customer-modal-close').trigger('click');

            }


        }

        GroupCustomerMng.prototype._removeRows = function(ev) {
            if(ev.grid === self.mainGridId) {
                self.remove_ids = _.union(_.pluck(ev.rows,'id'), self.remove_ids);
                self.add_ids = _.difference(self.add_ids, _.pluck(ev.rows,'id'));
                self._setFormValues();
            }
        }

        GroupCustomerMng.prototype.reset = function() {
            this.add_ids = [];
            this.remove_ids = [];
            $('#customer_ids_add').val('');
            $('#customer_ids_remove').val('');
        }
        var self = new GroupCustomerMng();
        groupCustomerMng = self;
    });


</script>

{{ THIS.view('core/backbonegrid').set('grid', customerCtrl.getGroupCustomersConfig(m)) | raw }}

<a role="button" href="#customer-grid-add" data-toggle="modal" style='display:none;' id='btn_add_customer'>{{ "Add"|_ }}</a>
<div class='modal fade' id='customer-grid-add' tabindex='-1'>
    <div class='modal-dialog' style='width:900px;'>
        <div class='modal-content'>
            <div class='modal-header'>
                <button aria-hidden='true' class='close' data-dismiss='modal' type='button'>Ã—</button>
                <h4 class='modal-title' id='myModalLabel'>{{ "Add user"|_ }}</h4>
            </div>
            <div class='modal-body'>
                {{ THIS.view('core/backbonegrid').set('grid', customerCtrl.getAllCustomersConfig(m)) | raw }}
            </div>
            <div class='modal-footer'>
                <button class='btn btn-default btn-close group-customer-modal-close' data-dismiss='modal' type='button'>{{ "Close"|_ }}</button>
            </div>
        </div>
    </div>
</div>