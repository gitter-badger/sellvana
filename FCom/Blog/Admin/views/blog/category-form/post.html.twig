{% set m = THIS.get('model') %}
{% set postCtrl =  APP.instance('FCom_Blog_Admin_Controller_Post') %}
<script>

    require(['jquery', 'fcom.backbonegrid', 'backbone'], function($) {
        var modalGrid = 'category_all_post_grid';
        var data = {
            post : {
                add: [],
                remove: [],
                origin: []
            }
        };

        function _setFormValue() {
            for(var key in data) {
                var val = data[key];
                val.add = _.difference(val.add, val.origin);
                console.log(key);
                console.log(val.add);
                val.remove = _.intersection(val.remove, val.origin);
                $("input[id='" + key +"_ids_add']").val(val.add.join(','));
                $("input[id='" +  key +"_ids_remove']").val(val.remove.join(','));
            }
        }
        function _processEvt(rows, flag) {
            var selData = data.post;
            var gridId = 'post_category';
            if (flag) {
                g_vent.trigger('silent_inject', {grid: gridId, rows:rows});
                selData.add = _.union(_.pluck(rows,'id'), selData.add);
                selData.remove = _.difference(selData.remove, _.pluck(rows,'id'));
            } else {
                console.log(_.pluck(rows,'id'));

                selData.remove = _.union(_.pluck(rows,'id'), selData.remove);
                selData.add = _.difference(selData.add, selData.remove);
                console.log(selData.remove);
            }

            _setFormValue();
        }
        g_vent.bind('add', function(ev) {
            if (ev.grid !== modalGrid) {
                $('#btn_add_post').trigger('click');
            }
            if (ev.grid === modalGrid) {
                _processEvt(ev.rows, true);
                g_vent.trigger('clear_selection', {grid: modalGrid});
                $('button.btn-close.post-modal-close').trigger('click');
            }

        });

        g_vent.bind('init', function(ev) {
            var selData = data.post;
            selData.origin = ev.ids;
        });

        g_vent.bind('mass-delete', function(ev) {
            _processEvt(ev.rows, false);
        });
    });

</script>
<input type='hidden' name='grid[post_category][add]' id='post_ids_add' />
<input type='hidden' name='grid[post_category][del]' id='post_ids_remove'/>
<div class='row'>
    <div class='col-sm-10'>
        {{ THIS.view('core/backbonegrid').set('grid', postCtrl.postGridConfig(m)) | raw }}
    </div>
</div>
<a role="button" href="#prod-grid-add" data-toggle="modal" style='display:none;' id='btn_add_post'>{{ "Add"|_ }}</a>
<div class='modal fade' id='prod-grid-add' tabindex='-1'>
    <div class='modal-dialog' style='width:900px;'>
        <div class='modal-content'>
            <div class='modal-header'>
                <button aria-hidden='true' class='close' data-dismiss='modal' type='button'>Ã—</button>
                <h4 class='modal-title' id='myModalLabel'>{{ "Add posts"|_ }}</h4>
            </div>
            <div class='modal-body'>
                {{ THIS.view('core/backbonegrid').set('grid', postCtrl.getAllPostConfig()) | raw }}
            </div>
            <div class='modal-footer'>
                <button class='btn btn-default btn-close post-modal-close' data-dismiss='modal' type='button'>{{ "Close"|_ }}</button>
            </div>
        </div>
    </div>
</div>





