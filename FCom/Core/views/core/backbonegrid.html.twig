{# Logic provided by FCom_Core_View_BackboneGrid #}

{% set config = THIS.getGridConfig() %}
{% set s = config.data.result.state %}

{# main grid structure #}
{# p=page, ps=pagesize, mp=maxpage, s=sort, sd=sortdir, c=totalrows #}
<!-- Grid Start -->
<div class="fcom-htmlgrid responsive-table f-grid-wrapper" id="{{ config.id }}" style="min-height:520px;">
    <!-- Grid Header Start -->
    {% if config.filters %}
    <div class="f-grid-top f-grid-toolbar {{ config.id | raw }} clearfix">
        <div class="f-col-filters-selection pull-left">
        <input type="text" class="f-grid-quick-search form-control" placeholder="{{ 'Quick Search'|_ }}"
        id="{{ config.id | raw }}-quick-search">
        <span class="{{ config.id }} dropdown">
            <a data-toggle="dropdown" class="btn dropdown-toggle showhide_columns grid-refresh" href="javascript:void()">
                {{ 'Filters'|_ }}
                <b class="caret"></b>
            </a>
            <ul class="{{ config.id }} dd-list dropdown-menu filters"></ul>
        </span>
        </div>
        {% if config.filters[0] %}
        <span class="{{ config.id }} f-filter-btns">
            <!-- filter buttons here -->
        </span>
        {% endif %}
    </div>
    {% endif %}

    <div class="row f-grid-bottom f-grid-toolbar {{ config.id | raw }} clearfix">
        <div class="col-sm-6">
            <span class="{{ config.id }} dropdown dd dd-nestable columns-span" style="display:inline;">
                <a data-toggle="dropdown" class="btn dropdown-toggle showhide_columns grid-refresh" href="javascript:void()">
                    {{ 'Columns' |_ }}
                    <b class="caret"></b>
                </a>
                <ol class="{{ config.id }} dd-list dropdown-menu columns" style="min-width:200px;">
                </ol>
            </span>
            {% for action in THIS.gridActions() %}
                {% if action.renderer %}
                    {{ THIS.callUserFunc(action.renderer, [action]) | raw }}
                {% elseif action.html %}
                    {{ action.html | raw }}
                {% endif %}
            {% endfor %}
        </div>
        <div class="col-sm-6 text-right pagination" style='margin:0px;'>
            <span class="{{ config.id }}-pagination f-grid-pagination"> </span>
            {% if config['data_mode']!= 'local' %}
                <ul class="pagination pagination-sm pagesize" style='margin:0px;'>
                    {% for ps in THIS.pageSizeOptions() %}
                        <li {{ ps == s.ps ? 'class="active"' }}>
                            <a class="js-change-url page-size" href="#">{{ ps }}</a>
                        </li>
                    {% endfor %}
                </ul>

                <ul class="{{ config.id }} pagination pagination-sm page" style='margin:0px;'>
                </ul>
            {% endif %}
        </div>
    </div>
    {% if s.description %}
        <div class="fcom-htmlgrid__status-description">
            {{ s.description|raw }}
        </div>
    {% endif %}
    <!-- Grid Header End -->

    <!-- Grid Body Start -->
    <div class="scrollable-area">
        <table class="fcom-htmlgrid__grid data-table-column-filter table table-bordered table-striped dataTable"
                id = {{ config.id | raw }}>
            <thead>
                <tr id="tr-sort-{{ config.id }}" role="row">
                    <!-- header template -->
                </tr>
            </thead>
            <tbody>
                <!-- row template -->
            </tbody>
        </table>
    </div>
    <!-- Grid Body End -->
</div>
<!-- Grid End -->

{# modal body template #}
<div id="{{ config.id }}-modal">
    <a class="btn" id="{{ config.id }}-modal-form-show" role="button"
            href="#{{ config.id }}-modal-form" data-toggle="modal" style="display:none;">
    </a>
    <div class='modal fade' id='{{ config.id }}-modal-form' tabindex='-1'>
        <div class='modal-dialog'>
            <div class='modal-content'>
                <div class='modal-header'>
                    <button aria-hidden='true' class='close' data-dismiss='modal' type='button'>Ã—</button>
                    <h4 class='modal-title' id='myModalLabel'>{{ 'Edit form'|_ }}</h4>
                </div>
                <form class="form form-horizontal validate-form" id='{{ config.id }}-modal-form'>
                    <div class='modal-body'>
                        <!-- Modal body template -->
                        {# BackboneGrid.Views.ModalForm #}
                    </div>
                </form>
                <div class='modal-footer'>
                    <button class='btn btn-default f-grid-modal-close' data-dismiss='modal' type='button'>{{ 'Close'|_ }}</button>
                    <button class='btn btn-primary save' type='button'>{{ 'Save changes' |_ }}</button>
                </div>
            </div>
        </div>
      </div>
</div>

{# modal element template #}
{# it can render one of text, textarea, select and custom HTML string #}
{# default is text #}
<script type="template" id="{{ config.id }}-modal-element-template">
    <% if (typeof(rc.form_hidden_label) === 'undefined' || !rc.form_hidden_label) { %>
        <div class="control-label col-sm-3">
            <label for="<%= rc.name %>">
                <%= rc.label%>
                <% if(rc._validation.indexOf('required') !== -1) { print('*'); } %>
            </label>
        </div>
    <% } %>

    <div class="controls col-sm-8">
      <% switch(rc.editor) {
            case 'none': %>
                <%= rc.element_print %>

                <% break;
            case 'select': %>
                <select name="<%= rc.name %>" id="<%= rc.name %>" class="form-control" <%= rc._validation %>>
                    <% for(var key in rc.options) { %>
                        <option value="<%= key %>"><%= rc.options[key] %></option>
                    <% } %>
                </select>

                <% break;
            case 'textarea': %>
                <textarea name="<%= rc.name %>" id="<%= rc.name %>" class="form-control" rows="5" <%= rc._validation %>>
                </textarea>

                <%break;
            default: %>
                <input name="<%= rc.name %>" id="<%= rc.name %>" type="text" class="form-control" <%= rc._validation %> >

      <% } %>
    </div>
</script>

{# column sequence & visiblity management template #}
<script type="template" id="{{ config.id }}-col-template">
  <div class="icon-ellipsis-vertical dd-handle dd3-handle"></div>
  <div class="dd3-content">
    <label>
        <input class="showhide_column" type="checkbox" datid=<%= rc.name %> <% if (rc.hidden === false) { %>checked <% } %> >
        <%= rc.label %>
    </label>
  </div>
</script>

{# column filter visibility management template #}
<script type="template" id="{{ config.id }}-filter-check-template">
  <div class="icon-ellipsis-vertical dd-handle dd3-handle"></div>
  <div class="dd3-content">
    <label>
        <input class="showhide_column" type="checkbox" datid=<%= rc.field %> <% if (rc.hidden === false) { %>checked <% } %> >
        <%= rc.label %>
    </label>
  </div>
</script>

{% set multiselectToggleOptions = THIS.multiselectToggleOptions() %}
{% set multiselectCurrent = THIS.multiselectCurrent() %}

{# grid header template #}
<script type='template' id="{{ config.id | raw }}-header-template">
    <%
    if (rc.type === 'row_select') { %>
        <div class="{{ config.id | raw }} dropdown f-grid-display-type">
            <button class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown">
                <span class="icon-placeholder">
                    <% if (rc.selectedCount>0) { %>
                        <i class="glyphicon glyphicon-check"></i>
                    <% } else { %>
                        <i class="glyphicon glyphicon-list"></i>
                    <% } %>
                </span>
                <span class="title">
                    <% if (rc.selectedCount>0) { %>
                        <%= rc.selectedCount %> row<% if (rc.selectedCount>1) { %>s<% } %>
                    <% } else { %>
                        A
                    <% } %>
                </span>
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu js-sel">
                {% for key, option in multiselectToggleOptions %}
                    <li><a href="#{{ key }}">{{ option }}</a></li>
                {% endfor %}
            </ul>
        </div>
    <% } else {
        if (rc.sortable === false) { %>
            <%= rc.label %>
        <% } else { %>
            <a class="js-change-url" style="cursor: pointer;"><%= rc.label %></a>
        <% }
    } %>
</script>

{# grid row template #}
<script type="template" id="{{ config.id }}-row-template">
    <% for (var index in rc.colsInfo) {
        var col = rc.colsInfo[index];
        if (col.hidden || col.form_only) {
            continue;
        }
        var overflow = '';
        if (col.overflow) {
                overflow = ' style="overflow:hidden;"';
        }
        %><td data-col="<%= col.name %>" <%= col.overflow %> ><%
            switch (col.type) {
            case 'row_select':
                %><input type="checkbox" name="{{ config.id }}[checked][<%= rc.row.id %>]" class="select-row"
                        <%= rc.row._rowSelect %> ><%

                break;
            case 'input':


                if (col.editable !== 'inline') {
                    switch (col.editor) {
                    case 'checkbox':
                    case 'radio' :
                        %><%= rc.row[col.name] ? 'Yes' : 'No' %><%

                         break;
                    case 'select':
                        %><%= col.options[rc.row[col.name]]

                        %><% break;
                    default:
                        %><%= rc.row[col.name] %><%
                     }

                    break;
                }

                var strName = "{{ config.id }}["+rc.row['id']+"]["+col.name+"]";
                var strId = "{{ config.id }}-"+col.name+"-"+rc.row['id'];
                var strClass = col.cssClass ? col.cssClass + ' form-control' : ' form-control';
                var strDisabled = (typeof(rc.row[col.name + '_disabled']) !== 'undefined' &&
                                   rc.row[col.name + '_disabled'] === true) ? 'DISABLED' : '';
                var validation = validationRules(col.validation);
                switch (col.editor) {
                case 'checkbox':
                    %><input type="checkbox" id="<%= strId %> name=<%= strName %>" class="<%= strClass %>" <%=validation  %>
                            data-col="<%= col.name %>" <%= strDisabled %> /><%

                     break;
                case 'textarea':
                    %><textarea id="<%= strId %>" name="<%= strName %>" class="<%= strClass %>" <%= validation %>
                            data-col="<%= col.name %>" <%= strDisabled %>  rows="4">
                        <%= rc.row[col.name] %>
                    </textarea><%

                    break;
                case 'select':
                    %><select id="<%= strId %>" name="<%= strName %>" class="<%= strClass %>" <%= validation %>
                            data-col="<%= col.name %>"  <%= strDisabled %> ><%

                        //if (_.isArray(col.options)) {
                            for(var i = 0, l = col.options.length; i<l; i++) {
                                %><option value="<%= col.options[i].value %>"><%= col.options[i].label %></option><%
                             }
                        /*} else {
                            for(var key in col.options) {
                                %><option value="<%= key %>"><%= col.options[key] %></option><%
                             }
                        }*/

                    %></select><%

                    break;
                case 'radio':
                    %><input type="checkbox" id="<%= strId %>" name="<%= strName %>" class="<%= strClass %>"
                            <%= validation %> data-col="<%= col.name %>"  <%= strDisabled %> /><%

                    break;
                default:
                    %><input type="text"  id="<%= strId %>" name="<%= strName %>" class="<%= strClass %>"
                            <%= validation %> data-col="<%= col.name %>"  <%= strDisabled %>
                            value="<%= rc.row[col.name] %>" /><%

                    break;
                }
                {# TODO why is it need in inline edit mode? #}
                %><span style="display:none;"><%= rc.row[col.name] %></span><%

                 break;
            case 'btn_group':
                %><div class="table-actions-btns-group"><%
                for(var i in col.buttons) {
                    var btn = col.buttons[i];
                    var event = (typeof(btn.event) !== 'undefined') ? btn.event : '';
                    switch(btn.type){
                    case 'link':
                        %><a <%= event %> class="btn btn-link <%= btn.cssClass %>" href="<%= btn.href %><%= rc.row[btn.col] %>"
                                title="<%= btn.title ? btn.title : '' %>">
                            <i class="<%= btn.icon %>" ></i>
                            <%= btn.caption %>
                        </a><%

                         break;
                    default:
                        %><button <%= event %> class="btn btn-link <%= btn.cssClass %>" title="<%= btn.title ? btn.title : '' %>" type="button">
                            <i class="<%= btn.icon %>" ></i>
                            <%= btn.caption %>
                        </button><%
                     }
                }
                %></div><%
                break;
            default:
                switch(col.display) {
                case 'eval':
                     eval('print('+col.print+');');

                     break;
                case 'file_size':
                    %><%= filesizeFormat(rc.row[col.name]) %><%

                     break;
                default:
                    %><%= rc.row[col.name] %><%
                 }

                break;
            }
        %></td><%
    } %>
</script>


<script type='template' id="{{ config.id }}-multiselect-filter-template">
      <button class='btn dropdown-toggle filter-text-main' data-toggle='dropdown'>
        <span class='f-grid-filter-field'>
          <%= rc.label %>
        </span>:
        <span class='f-grid-filter-value'>
          <% if(rc.val ==='') { %>
              {{ 'All'|_ }}
          <%} else { %>
            <%
                var val = rc.val.split(',');
                var str = '';
                for (var i in val) {
                    var tmp = rc.options;
                    str += tmp[val[i]] + ',';
                }
                str = str.substring(0, str.length - 1);
            %>
            <%= rc.filterLabel %> "<%= str %>"
          <% } %>
        </span>
        <span class="caret"></span>
    </button>

    <ul class="dropdown-menu filter-box">
      <li>
          <div class="input-group">
            <input type="hidden" id="multi_hidden" style="width:100%;min-width:120px;" value="<%= rc.val %>"/>
            <div class="input-group-btn">
              <button type="button" class="btn btn-primary update">
                 {{ 'Update'|_ }}
              </button>
            </div>
          </div>
      </li>
    </ul>
</script>

<script type='template' id="{{ config.id }}-select-filter-template">
      <input type="hidden" id="select_hidden" style="width:auto;" value="<%= rc.val%>"/>
</script>

<script type='template' id="{{ config.id }}-text-filter-template">
    <button class='btn dropdown-toggle filter-text-main' data-toggle='dropdown'>
        <span class='f-grid-filter-field'><%= rc.label %></span>:
        <span class='f-grid-filter-value'>
          <%
            var text = rc.filterLabel;
            rc.filterLabel = text.charAt(0).toUpperCase() + text.slice(1);
            if(rc.val ==='') { %>
              {{ 'All'|_ }}
          <%} else { %>
              <%= rc.filterLabel %> "<%= rc.val %>"
          <% } %>
        </span>
        <span class="caret"></span>
    </button>

    <ul class="dropdown-menu filter-box">
      <li>
          <div class="input-group">
            <div class="input-group-btn dropdown">
              <button class='btn btn-default dropdown-toggle filter-text-sub' data-toggle='dropdown'>
                  <%= rc.filterLabel%>
                  <span class='caret'></span>
              </button>

              <ul class='dropdown-menu filter-sub'>
                <li>
                    <a class='filter_op' data-id='contains' href='javascript:void()'>{{ 'contains'|_ }}</a>
                </li>
                <li>
                   <a class='filter_op' data-id='not' href='javascript:void()'>{{ 'does not contain'|_ }}</a>
                </li>
                <li>
                    <a class='filter_op' data-id='equal' href='javascript:void()'>{{ 'is equal to'|_ }}</a>
                </li>
                <li>
                    <a  class='filter_op' data-id='start' href='javascript:void()'>{{ 'start with'|_ }}</a>
                </li>
                <li>
                    <a class='filter_op' data-id='end' href='javascript:void()'>{{ 'end with'|_ }}</a>
                </li>
              </ul>
            </div>

            <input type="text" class="form-control" value="<%= rc.val  %>">

            <div class="input-group-btn">
              <button type="button" class="btn btn-primary update">
                 {{ 'Update'|_ }}
              </button>
            </div>
          </div>
      </li>
    </ul>
 </script>

<script type='template' id="{{ config.id }}-date-range-filter-template">
    <button class='btn dropdown-toggle filter-text-main' data-toggle='dropdown'>
        <span class='f-grid-filter-field'>
          <%= rc.label %>
        </span>:
        <span class='f-grid-filter-value'>
          <% if(rc.val ==='') { %>
              {{ 'All'|_ }}
          <%} else { %>
              <%= rc.filterLabel %> "<%= rc.val %>"
          <% } %>
        </span>
        <span class="caret"></span>
    </button>

    <ul class="dropdown-menu filter-box">
      <li>
          <div class="input-group">
            <div class="input-group-btn dropdown" >
              <button class='btn btn-default dropdown-toggle filter-text-sub' data-toggle='dropdown'>
                  <%= rc.filterLabel%>
                  <span class='caret'></span>
              </button>

              <ul class='dropdown-menu filter-sub'>
                <li>
                    <a class='filter_op range' data-id='between' href='javascript:void()'>{{ 'between'|_ }}</a>
                </li>
                <li>
                   <a class='filter_op not_range' data-id='from' href='javascript:void()'>{{ 'from'|_ }}</a>
                </li>
                <li>
                    <a class='filter_op not_range' data-id='to' href='javascript:void()'>{{ 'to'|_ }}</a>
                </li>
                <li>
                    <a  class='filter_op not_range' data-id='equal' href='javascript:void()'>{{ 'is equal to'|_ }}</a>
                </li>
                <li>
                    <a class='filter_op range' data-id='not_in' href='javascript:void()'>{{ 'not in'|_ }}</a>
                </li>
              </ul>
            </div>

            <div class="input-group range" <%= !rc.range ? 'style="display:none;"' :'style="display:table;"' %> >
                <input id="date-range-text-<%= rc.field %>" type="text" placeholder="{{ 'Select date range'|_ }}" class="form-control daterange" value="<%= rc.range ? rc.val : '' %>">
                <span id="daterange2" class="input-group-addon">
                  <i class="icon-calendar"></i>
                </span>
            </div>
            <div class="datepicker input-group not_range" <%= rc.range ? 'style="display:none;"' :'style="display:table;"' %> >
                          <input type="text" placeholder="Select date" data-format="yyyy-MM-dd" class="form-control" value="<%= !rc.range ? rc.val : '' %>">
                          <span class="input-group-addon">
                            <span data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"></span>
                          </span>
            </div>
            <div class="input-group-btn">
              <button type="button" class="btn btn-primary update">
                  <i class=" icon-check-sign"></i>
                  {{ 'Update'|_ }}
              </button>
            </div>
          </div>
      </li>
    </ul>
</script>

<script type='template' id="{{ config.id }}-number-range-filter-template">
    <button class='btn dropdown-toggle filter-text-main' data-toggle='dropdown'>
        <span class='f-grid-filter-field'>
          <%= rc.label %>
        </span>:
        <span class='f-grid-filter-value'>
          <% if(rc.val ==='') { %>
              {{ 'All'|_ }}
          <%} else { %>
              <%= rc.filterLabel %> "<%= rc.val %>"
          <% } %>
        </span>
        <span class="caret"></span>
    </button>

    <ul class="dropdown-menu filter-box">
      <li>
          <div class="input-group">
            <div class="input-group-btn dropdown" >
              <button class='btn btn-default dropdown-toggle filter-text-sub' data-toggle='dropdown'>
                  <%= rc.filterLabel%>
                  <span class='caret'></span>
              </button>

              <ul class='dropdown-menu filter-sub'>
                <li>
                    <a class='filter_op range' data-id='between' href='javascript:void()'>{{ 'between'|_ }}</a>
                </li>
                <li>
                    <a  class='filter_op not_range' data-id='equal' href='javascript:void()'>{{ 'is equal to'|_ }}</a>
                </li>
                <li>
                   <a class='filter_op not_range' data-id='from' href='javascript:void()'>{{ 'greater than'|_ }}</a>
                </li>
                <li>
                    <a class='filter_op not_range' data-id='to' href='javascript:void()'>{{ 'less than'|_ }}</a>
                </li>
                <li>
                    <a class='filter_op range' data-id='not_in' href='javascript:void()'>{{ 'not between'|_ }}</a>
                </li>
              </ul>
            </div>

            <div class="input-group-btn range" <%= !rc.range ? 'style="display:none;"' :'style="display:table;"' %>>
                <% var vals = rc.val.split('~'); %>
                <input type="text" placeholder="From" class="form-control js-number1" style="width:45%;" value="<%= rc.range ? vals[0] : '' %>">
                &nbsp;<i class="icon-resize-horizontal"></i>&nbsp;
                <input type="text" placeholder="To" class="form-control js-number2" style="width:45%;" value="<%= rc.range ? vals[1] : '' %>">

            </div>

            <div class="input-group-btn not_range" <%= rc.range ? 'style="display:none;"' :'style="display:table;"' %>>
              <input type="text" placeholder="Number" class="form-control js-number" value="<%= !rc.range ? rc.val : '' %>">
            </div>

            <div class="input-group-btn">
              <button type="buttton" class="btn btn-primary update">
                  <i class=" icon-check-sign"></i>
                  {{ 'Update'|_ }}
              </button>
            </div>
          </div>
      </li>
    </ul>
</script>

<script type="template" id="{{ config.id }}-add-set-fields">
    <div class="well">
        <div class="row">
            <div class="col-sm-12">
                <select id="{{ config.id }}-sel_sets" class="select2 form-control" style="width:150px;">
                    <option value=""></option>
                    <% for (var index in rc) {
                    print('<option value="'+rc[index].name+'">'+ rc[index].label+ '</option>');
                     }%>
                </select>
            </div>
        </div>
    </div>
</script>
<script>
require(['jquery', 'fcom.backbonegrid', 'backbone', 'underscore'], function($, Backbone, _) {

    if ($('#fcom_append_form').length > 0) {
      $('#fcom_append_form').append('<form id="{{ config.id }}-new-form" class="form form-horizontal validate-form"/>');
      var html = $("#{{ config.id }}-modal").html();

      $("#{{ config.id }}-modal").remove();
      $('form#{{ config.id }}-new-form').append(html);

    }

    var grid = new FCom.BackboneGrid({{ UTIL.toJson(config) | raw }});
});
</script>
