{# Logic provided by FCom_Core_View_Backgrid #}

{% set data = THIS.getGridData() %}
{% set grid = THIS.getGrid() %}
{% set config = grid.config %}
{% set s = data.result.state %}
{% set pageUrl = THIS.pageChangeHref() %}
{% set filterData = config.filters %}

{# p=page, ps=pagesize, mp=maxpage, s=sort, sd=sortdir, c=totalrows #}
<div class="fcom-htmlgrid responsive-table dataTables_wrapper" id="{{ config.id }}" style="min-height:500px;">
  {% if filterData %}
    <div class="row datatables-top f-grid-top-filters {{ config.id | raw }}">
        <input type="text" style="width:150px; margin-right:5px; display:inline;" class="form-control" placeholder="{{ 'Quick Search'|_ }}" id="{{ config.id | raw }}-quick-search">
      {% if filterData[0] %}
        <span class="f-filter-btns">
          <!-- filter buttons here -->
        </span>
      {% endif %}
    </div>
  {% endif %}

  <div class="f-htmlgrid-toolbar btn-toolbar {{ config.id | raw }} row">
      <div class="col-sm-7">
        <span class="{{ config.id }} dropdown dd dd-nestable filter-span" style="display:inline;">
            <a data-toggle="dropdown" class="dropdown-toggle showhide_columns grid-refresh" href="javascript:void()">
                Columns
                <b class="caret"></b>
            </a>
                <ol class="dd-list dropdown-menu" style="min-width:200px;">
                    <!--li calss="ui-state-default"-->
                    <!-- visibiility template -->
                    <!--/li -->
                </ol>
        </span>
        {% for action in THIS.gridActions() %}
          {% if action.renderer %}
            {{ THIS.callUserFunc(action.renderer, [action]) | raw }}
          {% elseif action.html %}
            {{ action.html | raw }}
          {% endif %}
        {% endfor %}
      </div>
      <div class="col-sm-5 text-right pagination" style='margin:0px;'>
        <span class="{{ config.id }}-pagination f-grid-pagination" href="javascript:void()"> </span>
        {% if config['data_mode']!= 'local' %}
          <ul class="pagination pagination-sm pagesize" style='margin:0px;'>
            {% for ps in THIS.pageSizeOptions() %}
              <li {{ ps==s.ps ? 'class="active"' }}>
                <a class="js-change-url page-size" href="#">{{ ps }}</a>
              </li>
            {% endfor %}
          </ul>

          <ul class="{{ config.id }} pagination pagination-sm page" style='margin:0px;'>
            {#
            <label>
              {{ 'Page'|_ }}
            </label>
            <input class="fcom-htmlgrid__gotopage js-change-url" data-href="{{ THIS.pageChangeHref() }}" value="{{ s.p }}">
            {{ 'of %s'|_(s.mp) }}
            #}
          </ul>
        {% endif %}
      </div>
  </div>

  {% if s.description %}
    <div class="fcom-htmlgrid__status-description">
      {{ s.description|raw }}
    </div>
  {% endif %}
  <div class="scrollable-area">
    <table class="fcom-htmlgrid__grid data-table-column-filter table table-bordered table-striped dataTable" id = {{ config.id | raw }}>
      {#<colgroup>
        {% foreach ($config['columns'] as $colId => $column) %}
          <col>(width="#{!empty($column['width']) ? $column['width'] : ''}")</col>
        {% end %}
      </colgroup>#}
      <thead>
        <tr id="tr-sort-{{ config.id }}" role="row">
          <!-- header template -->
        </tr>
      </thead>
      <tbody>
        {#{ THIS.rowsHtml() | raw }#}
        <!-- row template -->
      </tbody>
    </table>
  </div>
</div>
 <div id="{{ config.id }}-modal">
      <a class="btn" id="{{ config.id }}-modal-form-show" role="button" href="#{{ config.id }}-modal-form" data-toggle="modal" style="display:none;"></a>
      <div class='modal fade' id='{{ config.id }}-modal-form' tabindex='-1'>
        <div class='modal-dialog'>
            <div class='modal-content'>
                <div class='modal-header'>
                    <button aria-hidden='true' class='close' data-dismiss='modal' type='button'>Ã—</button>
                    <h4 class='modal-title' id='myModalLabel'>Mass edit form</h4>
                </div>
                <form class="form form-horizontal validate-form" id='{{ config.id }}-modal-form'>
                  <div class='modal-body'>
                      <!-- mass edit form element template is here -->
                  </div>
                </form>
                <div class='modal-footer'>
                    <button class='btn btn-default' data-dismiss='modal' type='button'>Close</button>
                    <button class='btn btn-primary save' type='button'>Save changes</button>
                </div>
            </div>
        </div>
      </div>
  </div>





<script type="template" id="{{ config.id }}-modal-element-template">
    <div class="control-label col-sm-3">
      <label for="<%- rc.name %>"><%- rc.label%></label>
    </div>
    <div class="controls col-sm-8">
      <% if (typeof(rc.editor) === 'undefined' || rc.editor ==='text') { %>
        <input name="<%- rc.name %>" id="<%- rc.name %>" type="text" id="<%- rc.name %>" class="form-control" <% print(validationRules(rc.validation));%> >
      <% } else if(rc.editor === 'select') { %>
        <select name="<%- rc.name %>" id="<%- rc.name %>" class="form-control" <% print(validationRules(rc.validation)); %>>
          <% for(var key in rc.options) { %>
            <option value="<%- key %>"><%- rc.options[key] %></option>
          <% } %>
        </select>
      <% } %>
    </div>
</script>
<script type="template" id="{{ config.id }}-col-template">
  <div class="icon-ellipsis-vertical dd-handle dd3-handle"></div>
  <div class="dd3-content">
    <label>
        <input class="showhide_column" type="checkbox" datid=<%- rc.name %> <% if (rc.hidden === false) { %>checked <% } %> >
        <%- rc.label %>
    </label>
  </div>
</script>
<script type="template" id="{{ config.id }}-row-template">
  <% for (var index in rc.colsInfo) {
    var col = rc.colsInfo[index];
    if(col.hidden ) {
      continue;
    }
    var overflow = '';
    if(col.overflow) {
      overflow = ' style="overflow:hidden;"';
    }
    print('<td data-col="'+col.name+'" '+overflow +'>');

    if (col.cell === 'select-row') {
        var isSelected = '';
        var isSelectable = rc.row._selectable ? '' : 'DISABLED';
        if (rc.row._selectable && rc.row.selected)
          isSelected = 'checked';
        print('<input type="checkbox" name="[{{ config.id}}][checked]['+rc.row.id+']" class="select-row" '+isSelected+' '+isSelectable+' >');
    } else if (col.name === '_actions') {
        print('&nbsp;&nbsp;');
        if (typeof(col.data.custom) !== 'undefined' && col.data.custom) {
          print('<button class="btn btn-link btn-custom" type="button">');
            print(col.data.custom.caption);
          print('</button>');
        }

        print('&nbsp;&nbsp;');
        if (typeof(col.data.edit) != 'undefined') {
            if (typeof(col.data.edit.href) !== 'undefined') {
              print('<a class="btn btn-success btn-xs btn-edit" href="'+col.data.edit.href+rc.row[col.data.edit.col]+'"><i class=" icon-edit-sign"></i></a>');
            } else {
              print('<button type="button" class="btn btn-success btn-xs btn-edit _modal" ><i class=" icon-edit-sign"></i></button>');
            }
        }
        print('&nbsp;&nbsp;');
        if (typeof(col.data.delete) !== 'undefined') {
          print('<button class="btn btn-link btn-delete '+col.data.delete+'" type="button">');
          print('<i class="icon-remove"></i>');
          print('</button>');
        }
    } else {
      if (typeof(col.print) !== 'undefined') {
        eval('print('+col.print+');');
      } else {
        if (typeof(col.display) === 'undefined') {
          if (typeof(col.editable) !== 'undefined') {

            if (col.editor === 'select') {
                if(col.editable === 'inline') {
                print('<select id="{{ config.id }}-'+col.name+'-'+rc.row['id']+'" name="{{ config.id }}-'+col.name+'-'+rc.row['id']+'" class="form-control" '+validationRules(col.validation)+' data-col="'+col.name+'" >');
                for(var key in col.options) {
                    print('<option value="'+key+'">'+col.options[key]+'</option>');
                }
                print('</select>');
                print ('<span style="display:none;">'+col.options[rc.row[col.name]]+'</span>')
              } else {
                print(col.options[rc.row[col.name]]);
              }
            }

            if (typeof(col.editor) === 'undefined' || col.editor === 'text') {
              if(col.editable === 'inline') {
                print('<input type="text"  id="{{ config.id }}'+col.name+'-'+rc.row['id']+'" name="{{ config.id }}-'+col.name+'-'+rc.row['id']+'" class="form-control" '+validationRules(col.validation)+' data-col="'+col.name+'" value="'+rc.row[col.name]+'">');
                print ('<span style="display:none;">'+rc.row[col.name]+'</span>');
              } else {
                print(rc.row[col.name]);
              }
            }

          } else {
            print(rc.row[col.name]);
          }
        } else if (col.display === 'file_size') {
          var size = parseInt(rc.row[col.name]);
          if (size/(1024*1024) > 1) {
            size = size/(1024*1024);
            size = size.toFixed(2)+' MB';
          } else if (size/1024 > 1) {
            size = size/1024;
            size = size.toFixed(2)+' KB';
          } else {
            size = size+' Byte';
          }
          print(size);
        }
    }
  }

    print('</td>');
  } %>
</script>

<script type='template' id="{{ config.id | raw }}-header-template">
  <% if(rc.type === '' || rc.type === 'default') { %>
    <% if (typeof(rc.sortable) === 'undefined' || rc.sortable === true) { %><a class="js-change-url" style="cursor: pointer;"> <% } %>
      <%- rc.label %>
    <% if (typeof(rc.sortable) === 'undefined' || rc.sortable === true) { %> </a> <% } %>
  <% } else if (rc.type === 'multiselect') { %>
   <% if (rc.selectedCount>0) { %>
      <%- rc.selectedCount %> row<% if (rc.selectedCount>1) { %>s<% } %>
    <% } %>
    <select class="{{ config.id | raw }} js-sel">
      {{ UTIL.optionsHtml(THIS.multiselectToggleOptions(), THIS.multiselectCurrent()) | raw }}
    </select>
  <% } %>
</script>
<script type='template' id="{{ config.id }}-multiselect-filter-template">
      <span><%- rc.label %>:</span>
      <input type="hidden" id="multi_hidden" style="width:auto;min-width:120px;"/>
</script>

<script type='template' id="{{ config.id }}-select-filter-template">
      <input type="hidden" id="select_hidden" style="width:auto;"/>
</script>

<script type='template' id="{{ config.id }}-text-filter-template">
    <button class='btn dropdown-toggle filter-text-main' data-toggle='dropdown'>
        <%- rc.label %>:
        <% if(rc.filterVal ==='') { %>
            All
        <%} else { %>
            <%- rc.filterLabel %> "<%- rc.filterVal %>"
        <% } %>
        <span class="caret"></span>
    </button>

    <ul class="dropdown-menu filter-box">
      <li>
          <div class="input-group">
            <div class="input-group-btn dropdown">
              <button class='btn btn-default dropdown-toggle filter-text-sub' data-toggle='dropdown'>
                  <%- rc.filterLabel%>
                  <span class='caret'></span>
              </button>

              <ul class='dropdown-menu filter-sub'>
                <li>
                    <a class='filter_op' data-id='contains' href='javascript:void()'>contains</a>
                </li>
                <li>
                   <a class='filter_op' data-id='not' href='javascript:void()'>does not contain</a>
                </li>
                <li>
                    <a class='filter_op' data-id='equal' href='javascript:void()'>is equal to</a>
                </li>
                <li>
                    <a  class='filter_op' data-id='start' href='javascript:void()'>start with</a>
                </li>
                <li>
                    <a class='filter_op' data-id='end' href='javascript:void()'>end with</a>
                </li>
              </ul>
            </div>

            <input type="text" class="form-control" value="<%- rc.filterVal  %>">

            <div class="input-group-btn">
              <button type="button" class="btn btn-default clear">
                <i class=" icon-remove"></i>
              </button>
              <button type="submit" class="btn btn-primary update">
                 Update
              </button>
            </div>
          </div>
      </li>
    </ul>
 </script>

<script type='template' id="{{ config.id }}-date-range-filter-template">
    <button class='btn dropdown-toggle filter-text-main' data-toggle='dropdown'>
        <%- rc.label %>: All
        <span class="caret"></span>
    </button>

    <ul class="dropdown-menu filter-box" style="width:570px;">
      <li>
          <div class="input-group">
            <div class="input-group-btn dropdown" >
              <button class='btn btn-default dropdown-toggle filter-text-sub' data-toggle='dropdown'>
                  <%- rc.filterLabel%>
                  <span class='caret'></span>
              </button>

              <ul class='dropdown-menu filter-sub'>
                <li>
                    <a class='filter_op range' data-id='between' href='javascript:void()'>between</a>
                </li>
                <li>
                   <a class='filter_op not_range' data-id='from' href='javascript:void()'>from</a>
                </li>
                <li>
                    <a class='filter_op not_range' data-id='to' href='javascript:void()'>to</a>
                </li>
                <li>
                    <a  class='filter_op not_range' data-id='equal' href='javascript:void()'>is equal to</a>
                </li>
                <li>
                    <a class='filter_op range' data-id='not_in' href='javascript:void()'>not in</a>
                </li>
              </ul>
            </div>

            <div class="input-group range" style="width:260px;display:table;">
                <input type="text" placeholder="Select daterange" class="form-control daterange" >
                <span id="daterange2" class="input-group-addon">
                  <i class="icon-calendar"></i>
                </span>
            </div>
            <div class="datepicker input-group not_range"  style="width:260px;display:none;">
                          <input type="text" placeholder="Select date" data-format="yyyy-MM-dd" class="form-control">
                          <span class="input-group-addon">
                            <span data-time-icon="icon-time" data-date-icon="icon-calendar" class="icon-calendar"></span>
                          </span>
            </div>
            <div class="input-group-btn">
              <button type="button" class="btn btn-default clear">
                  <i class=" icon-remove"></i>
              </button>
              <button type="submit" class="btn btn-primary update">
                  <i class=" icon-check-sign"></i>
                  Update
              </button>
            </div>
          </div>
      </li>
    </ul>
</script>
<script>
require(['jquery', 'fcom.backbonegrid'], function($) {

    if ($('#fcom_append_form').length > 0) {
      $('#fcom_append_form').append('<form id="{{ config.id }}-new-form" class="form form-horizontal validate-form"/>');
      var html = $("#{{ config.id }}-modal").html();

      $("#{{ config.id }}-modal").remove();
      $('form#{{ config.id }}-new-form').append(html);

    }
    //$(function() {
        var grid = new FCom.BackboneGrid({
            id: "{{ config.id }}",
            personalize_url: "{{ APP.href('my_account/personalize') }}",
            data_url: "{{ config.data_url }}",
            edit_url: "{{ config.edit_url }}",
            data: {{ THIS.getPageRowsData() | raw }},
            columns: {{ THIS.getColumnsData() | raw }},
            data_mode: "{{ config.data_mode }}",
            filters: {{ THIS.getFilterData()  | raw }},
            events: {{ THIS.getEventData() | raw }},
            callbacks: {{ THIS.getCallbacks() | raw }}
        });
    //});
});
</script>
